{"ast":null,"code":"import React,{useState}from'react';import{useNavigate,Link}from'react-router-dom';import{useAuth}from'../context/AuthContext';import'./Auth.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[username,setUsername]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);const{signup}=useAuth();const navigate=useNavigate();const handleSubmit=async e=>{e.preventDefault();if(password!==confirmPassword){return setError('비밀번호가 일치하지 않습니다.');}if(password.length<6){return setError('비밀번호는 최소 6자 이상이어야 합니다.');}try{setError('');setLoading(true);await signup(email,password,username);navigate('/');}catch(error){setError(error.message);}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"username\",children:\"\\uC0AC\\uC6A9\\uC790\\uBA85\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"username\",value:username,onChange:e=>setUsername(e.target.value),required:true,placeholder:\"\\uC0AC\\uC6A9\\uC790\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"\\uC774\\uBA54\\uC77C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true,placeholder:\"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694 (\\uCD5C\\uC18C 6\\uC790)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true,placeholder:\"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD558\\uC138\\uC694\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"auth-button\",children:loading?'가입 중...':'회원가입'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-links\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uC73C\\uC2E0\\uAC00\\uC694? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"\\uB85C\\uADF8\\uC778\"})]})})]})});}export default Signup;","map":{"version":3,"names":["React","useState","useNavigate","Link","useAuth","jsx","_jsx","jsxs","_jsxs","Signup","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","username","setUsername","error","setError","loading","setLoading","signup","navigate","handleSubmit","e","preventDefault","length","message","className","children","onSubmit","htmlFor","type","id","value","onChange","target","required","placeholder","disabled","to"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Auth.css';\n\nfunction Signup() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { signup } = useAuth();\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      return setError('비밀번호가 일치하지 않습니다.');\n    }\n\n    if (password.length < 6) {\n      return setError('비밀번호는 최소 6자 이상이어야 합니다.');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(email, password, username);\n      navigate('/');\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h2>회원가입</h2>\n        {error && <div className=\"error-message\">{error}</div>}\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">사용자명</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n              placeholder=\"사용자명을 입력하세요\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">이메일</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              required\n              placeholder=\"이메일을 입력하세요\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">비밀번호</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              placeholder=\"비밀번호를 입력하세요 (최소 6자)\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">비밀번호 확인</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n              placeholder=\"비밀번호를 다시 입력하세요\"\n            />\n          </div>\n          <button type=\"submit\" disabled={loading} className=\"auth-button\">\n            {loading ? '가입 중...' : '회원가입'}\n          </button>\n        </form>\n        <div className=\"auth-links\">\n          <p>\n            이미 계정이 있으신가요? <Link to=\"/login\">로그인</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}