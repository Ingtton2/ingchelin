{"ast":null,"code":"import{createClient}from'@supabase/supabase-js';// 환경변수에서 Supabase 설정 가져오기\nconst supabaseUrl=process.env.REACT_APP_SUPABASE_URL;const supabaseAnonKey=process.env.REACT_APP_SUPABASE_ANON_KEY;// 환경변수가 없으면 개발용 폴백 사용\nconst fallbackUrl='https://ddhrabdtbwzdmukbkixo.supabase.co';const fallbackKey='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRkaHJhYmR0Ynd6ZG11a2JraXhvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwNjE4NTcsImV4cCI6MjA2ODYzNzg1N30.Z5QGluZn2yTPzkqNgklAKkegrPKaVrcAlu3eczMSISo';// 실제 사용할 URL과 키 결정\nconst finalUrl=supabaseUrl||fallbackUrl;const finalKey=supabaseAnonKey||fallbackKey;console.log('Supabase 설정:',{hasEnvUrl:!!supabaseUrl,hasEnvKey:!!supabaseAnonKey,finalUrl:finalUrl,isUsingFallback:!supabaseUrl||!supabaseAnonKey});// 실제 Supabase 클라이언트 생성\nconst supabase=createClient(finalUrl,finalKey);export{supabase};// Supabase를 통한 직접 데이터 접근 (백엔드 없이 사용 가능)\nexport const supabaseAPI={// 모든 레스토랑 조회\ngetAll:async()=>{const{data,error}=await supabase.from('restaurants').select('*');if(error)throw error;return data;},// ID로 레스토랑 조회\ngetById:async id=>{const{data,error}=await supabase.from('restaurants').select('*').eq('id',id).single();if(error)throw error;return data;},// 요리 타입으로 검색\ngetByCuisine:async cuisine=>{const{data,error}=await supabase.from('restaurants').select('*').eq('cuisine',cuisine);if(error)throw error;return data;},// 평점으로 검색\ngetByRating:async rating=>{const{data,error}=await supabase.from('restaurants').select('*').gte('rating',rating);if(error)throw error;return data;},// 랜덤 레스토랑 추천\ngetRandom:async()=>{const{data,error}=await supabase.from('restaurants').select('*').limit(1).order('id',{ascending:false});if(error)throw error;return data[0];}};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","fallbackUrl","fallbackKey","finalUrl","finalKey","console","log","hasEnvUrl","hasEnvKey","isUsingFallback","supabase","supabaseAPI","getAll","data","error","from","select","getById","id","eq","single","getByCuisine","cuisine","getByRating","rating","gte","getRandom","limit","order","ascending"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/services/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\n// 환경변수에서 Supabase 설정 가져오기\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// 환경변수가 없으면 개발용 폴백 사용\nconst fallbackUrl = 'https://ddhrabdtbwzdmukbkixo.supabase.co';\nconst fallbackKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRkaHJhYmR0Ynd6ZG11a2JraXhvIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMwNjE4NTcsImV4cCI6MjA2ODYzNzg1N30.Z5QGluZn2yTPzkqNgklAKkegrPKaVrcAlu3eczMSISo';\n\n// 실제 사용할 URL과 키 결정\nconst finalUrl = supabaseUrl || fallbackUrl;\nconst finalKey = supabaseAnonKey || fallbackKey;\n\nconsole.log('Supabase 설정:', {\n  hasEnvUrl: !!supabaseUrl,\n  hasEnvKey: !!supabaseAnonKey,\n  finalUrl: finalUrl,\n  isUsingFallback: !supabaseUrl || !supabaseAnonKey\n});\n\n// 실제 Supabase 클라이언트 생성\nconst supabase = createClient(finalUrl, finalKey);\n\nexport { supabase };\n\n// Supabase를 통한 직접 데이터 접근 (백엔드 없이 사용 가능)\nexport const supabaseAPI = {\n  // 모든 레스토랑 조회\n  getAll: async () => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*');\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // ID로 레스토랑 조회\n  getById: async (id) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // 요리 타입으로 검색\n  getByCuisine: async (cuisine) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .eq('cuisine', cuisine);\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // 평점으로 검색\n  getByRating: async (rating) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .gte('rating', rating);\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // 랜덤 레스토랑 추천\n  getRandom: async () => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .limit(1)\n      .order('id', { ascending: false });\n    \n    if (error) throw error;\n    return data[0];\n  }\n}; "],"mappings":"AAAA,OAASA,YAAY,KAAQ,uBAAuB,CAEpD;AACA,KAAM,CAAAC,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,KAAM,CAAAC,eAAe,CAAGH,OAAO,CAACC,GAAG,CAACG,2BAA2B,CAE/D;AACA,KAAM,CAAAC,WAAW,CAAG,0CAA0C,CAC9D,KAAM,CAAAC,WAAW,CAAG,kNAAkN,CAEtO;AACA,KAAM,CAAAC,QAAQ,CAAGR,WAAW,EAAIM,WAAW,CAC3C,KAAM,CAAAG,QAAQ,CAAGL,eAAe,EAAIG,WAAW,CAE/CG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAE,CAC1BC,SAAS,CAAE,CAAC,CAACZ,WAAW,CACxBa,SAAS,CAAE,CAAC,CAACT,eAAe,CAC5BI,QAAQ,CAAEA,QAAQ,CAClBM,eAAe,CAAE,CAACd,WAAW,EAAI,CAACI,eACpC,CAAC,CAAC,CAEF;AACA,KAAM,CAAAW,QAAQ,CAAGhB,YAAY,CAACS,QAAQ,CAAEC,QAAQ,CAAC,CAEjD,OAASM,QAAQ,EAEjB;AACA,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzB;AACAC,MAAM,CAAE,KAAAA,CAAA,GAAY,CAClB,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CAEd,GAAIF,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CACb,CAAC,CAED;AACAI,OAAO,CAAE,KAAO,CAAAC,EAAE,EAAK,CACrB,KAAM,CAAEL,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CACXG,EAAE,CAAC,IAAI,CAAED,EAAE,CAAC,CACZE,MAAM,CAAC,CAAC,CAEX,GAAIN,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CACb,CAAC,CAED;AACAQ,YAAY,CAAE,KAAO,CAAAC,OAAO,EAAK,CAC/B,KAAM,CAAET,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CACXG,EAAE,CAAC,SAAS,CAAEG,OAAO,CAAC,CAEzB,GAAIR,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CACb,CAAC,CAED;AACAU,WAAW,CAAE,KAAO,CAAAC,MAAM,EAAK,CAC7B,KAAM,CAAEX,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CACXS,GAAG,CAAC,QAAQ,CAAED,MAAM,CAAC,CAExB,GAAIV,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CACb,CAAC,CAED;AACAa,SAAS,CAAE,KAAAA,CAAA,GAAY,CACrB,KAAM,CAAEb,IAAI,CAAEC,KAAM,CAAC,CAAG,KAAM,CAAAJ,QAAQ,CACnCK,IAAI,CAAC,aAAa,CAAC,CACnBC,MAAM,CAAC,GAAG,CAAC,CACXW,KAAK,CAAC,CAAC,CAAC,CACRC,KAAK,CAAC,IAAI,CAAE,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CAEpC,GAAIf,KAAK,CAAE,KAAM,CAAAA,KAAK,CACtB,MAAO,CAAAD,IAAI,CAAC,CAAC,CAAC,CAChB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}