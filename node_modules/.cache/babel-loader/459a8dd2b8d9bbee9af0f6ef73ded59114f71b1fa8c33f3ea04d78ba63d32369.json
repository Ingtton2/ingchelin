{"ast":null,"code":"var _jsxFileName = \"/Users/ingtto/Documents/GitHub/ingchelin/src/context/VisitContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VisitContext = /*#__PURE__*/createContext();\nexport const useVisit = () => {\n  _s();\n  const context = useContext(VisitContext);\n  if (!context) {\n    throw new Error('useVisit must be used within a VisitProvider');\n  }\n  return context;\n};\n_s(useVisit, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const VisitProvider = ({\n  children\n}) => {\n  _s2();\n  const [visitStatus, setVisitStatus] = useState({});\n\n  // localStorage에서 방문 상태 로드\n  useEffect(() => {\n    const savedVisitStatus = localStorage.getItem('visitStatus');\n    if (savedVisitStatus) {\n      setVisitStatus(JSON.parse(savedVisitStatus));\n    }\n  }, []);\n\n  // 방문 상태 변경시 localStorage에 저장\n  useEffect(() => {\n    localStorage.setItem('visitStatus', JSON.stringify(visitStatus));\n  }, [visitStatus]);\n\n  // 방문 상태 설정\n  const setRestaurantVisitStatus = (restaurantId, status) => {\n    setVisitStatus(prev => ({\n      ...prev,\n      [restaurantId]: status\n    }));\n  };\n\n  // 방문 상태 가져오기\n  const getRestaurantVisitStatus = restaurantId => {\n    return visitStatus[restaurantId] || 'not-visited'; // 'liked', 'disliked', 'not-visited'\n  };\n\n  // 방문 상태별 통계\n  const getVisitStats = () => {\n    const stats = {\n      liked: 0,\n      disliked: 0,\n      notVisited: 0\n    };\n    Object.values(visitStatus).forEach(status => {\n      if (status === 'liked') stats.liked++;else if (status === 'disliked') stats.disliked++;\n    });\n\n    // 전체 식당 수에서 방문한 곳을 빼면 안 가본 곳\n    const totalRestaurants = 20; // 현재 식당 데이터 수\n    stats.notVisited = totalRestaurants - stats.liked - stats.disliked;\n    return stats;\n  };\n  const value = {\n    visitStatus,\n    setRestaurantVisitStatus,\n    getRestaurantVisitStatus,\n    getVisitStats\n  };\n  return /*#__PURE__*/_jsxDEV(VisitContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s2(VisitProvider, \"+ySQPLI7RyedM1CU9pur8wCPRCI=\");\n_c = VisitProvider;\nvar _c;\n$RefreshReg$(_c, \"VisitProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","VisitContext","useVisit","_s","context","Error","VisitProvider","children","_s2","visitStatus","setVisitStatus","savedVisitStatus","localStorage","getItem","JSON","parse","setItem","stringify","setRestaurantVisitStatus","restaurantId","status","prev","getRestaurantVisitStatus","getVisitStats","stats","liked","disliked","notVisited","Object","values","forEach","totalRestaurants","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/context/VisitContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst VisitContext = createContext();\n\nexport const useVisit = () => {\n  const context = useContext(VisitContext);\n  if (!context) {\n    throw new Error('useVisit must be used within a VisitProvider');\n  }\n  return context;\n};\n\nexport const VisitProvider = ({ children }) => {\n  const [visitStatus, setVisitStatus] = useState({});\n\n  // localStorage에서 방문 상태 로드\n  useEffect(() => {\n    const savedVisitStatus = localStorage.getItem('visitStatus');\n    if (savedVisitStatus) {\n      setVisitStatus(JSON.parse(savedVisitStatus));\n    }\n  }, []);\n\n  // 방문 상태 변경시 localStorage에 저장\n  useEffect(() => {\n    localStorage.setItem('visitStatus', JSON.stringify(visitStatus));\n  }, [visitStatus]);\n\n  // 방문 상태 설정\n  const setRestaurantVisitStatus = (restaurantId, status) => {\n    setVisitStatus(prev => ({\n      ...prev,\n      [restaurantId]: status\n    }));\n  };\n\n  // 방문 상태 가져오기\n  const getRestaurantVisitStatus = (restaurantId) => {\n    return visitStatus[restaurantId] || 'not-visited'; // 'liked', 'disliked', 'not-visited'\n  };\n\n  // 방문 상태별 통계\n  const getVisitStats = () => {\n    const stats = {\n      liked: 0,\n      disliked: 0,\n      notVisited: 0\n    };\n\n    Object.values(visitStatus).forEach(status => {\n      if (status === 'liked') stats.liked++;\n      else if (status === 'disliked') stats.disliked++;\n    });\n\n    // 전체 식당 수에서 방문한 곳을 빼면 안 가본 곳\n    const totalRestaurants = 20; // 현재 식당 데이터 수\n    stats.notVisited = totalRestaurants - stats.liked - stats.disliked;\n\n    return stats;\n  };\n\n  const value = {\n    visitStatus,\n    setRestaurantVisitStatus,\n    getRestaurantVisitStatus,\n    getVisitStats\n  };\n\n  return (\n    <VisitContext.Provider value={value}>\n      {children}\n    </VisitContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC5D,IAAIF,gBAAgB,EAAE;MACpBD,cAAc,CAACI,IAAI,CAACC,KAAK,CAACJ,gBAAgB,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAb,SAAS,CAAC,MAAM;IACdc,YAAY,CAACI,OAAO,CAAC,aAAa,EAAEF,IAAI,CAACG,SAAS,CAACR,WAAW,CAAC,CAAC;EAClE,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMS,wBAAwB,GAAGA,CAACC,YAAY,EAAEC,MAAM,KAAK;IACzDV,cAAc,CAACW,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACF,YAAY,GAAGC;IAClB,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,wBAAwB,GAAIH,YAAY,IAAK;IACjD,OAAOV,WAAW,CAACU,YAAY,CAAC,IAAI,aAAa,CAAC,CAAC;EACrD,CAAC;;EAED;EACA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAG;MACZC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE;IACd,CAAC;IAEDC,MAAM,CAACC,MAAM,CAACpB,WAAW,CAAC,CAACqB,OAAO,CAACV,MAAM,IAAI;MAC3C,IAAIA,MAAM,KAAK,OAAO,EAAEI,KAAK,CAACC,KAAK,EAAE,CAAC,KACjC,IAAIL,MAAM,KAAK,UAAU,EAAEI,KAAK,CAACE,QAAQ,EAAE;IAClD,CAAC,CAAC;;IAEF;IACA,MAAMK,gBAAgB,GAAG,EAAE,CAAC,CAAC;IAC7BP,KAAK,CAACG,UAAU,GAAGI,gBAAgB,GAAGP,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACE,QAAQ;IAElE,OAAOF,KAAK;EACd,CAAC;EAED,MAAMQ,KAAK,GAAG;IACZvB,WAAW;IACXS,wBAAwB;IACxBI,wBAAwB;IACxBC;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACgC,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAzB,QAAA,EACjCA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC7B,GAAA,CA7DWF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}