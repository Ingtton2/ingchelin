{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useFavorites}from'../context/FavoriteContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LocationBasedRecommendation=()=>{const[userLocation,setUserLocation]=useState(null);const[nearbyRestaurants,setNearbyRestaurants]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedRestaurant,setSelectedRestaurant]=useState(null);const[showModal,setShowModal]=useState(false);const{addToFavorites,removeFromFavorites,isInFavorites}=useFavorites();// 두 지점 간의 거리 계산 (하버사인 공식)\nconst calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// 지구의 반지름 (km)\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));const distance=R*c;// km\nreturn distance;};// 백엔드에서 레스토랑 데이터 가져오기\nconst fetchRestaurants=async()=>{try{const response=await fetch('http://localhost:8080/api/restaurants');if(!response.ok){throw new Error('레스토랑 정보를 불러오는데 실패했습니다.');}const data=await response.json();// 방문 수 데이터 가져오기\nconst visitCountsResponse=await fetch('http://localhost:8080/api/visits/count/all');let visitCounts={};if(visitCountsResponse.ok){visitCounts=await visitCountsResponse.json();}// 방문 수 데이터를 레스토랑 데이터에 추가\nconst restaurantsWithVisitCounts=data.map(restaurant=>({...restaurant,totalRatings:visitCounts[restaurant.id]||0}));return restaurantsWithVisitCounts;}catch(error){console.error('Failed to fetch restaurants:',error);throw error;}};// 사용자 위치 가져오기\nconst getUserLocation=async()=>{setLoading(true);setError(null);if(!navigator.geolocation){setError('이 브라우저에서는 위치 정보를 지원하지 않습니다.');setLoading(false);return;}navigator.geolocation.getCurrentPosition(async position=>{try{const{latitude,longitude}=position.coords;setUserLocation({lat:latitude,lng:longitude});// 백엔드에서 레스토랑 데이터 가져오기\nconst restaurants=await fetchRestaurants();// 가까운 식당 찾기 (위도/경도가 있는 경우만)\nconst restaurantsWithDistance=restaurants.filter(restaurant=>restaurant.latitude&&restaurant.longitude).map(restaurant=>{const distance=calculateDistance(latitude,longitude,restaurant.latitude,restaurant.longitude);return{...restaurant,distance:distance,position:{lat:restaurant.latitude,lng:restaurant.longitude},businessHours:\"11:00 - 22:00\"// 임시 데이터\n};});// 위도/경도가 없는 경우 기본 위치 데이터 추가\nconst restaurantsWithoutLocation=restaurants.filter(restaurant=>!restaurant.latitude||!restaurant.longitude).map(restaurant=>({...restaurant,distance:Math.random()*10+1,// 임시 거리 (1-11km)\nposition:restaurant.position||{lat:37.5665,lng:126.9780},// 기존 position 사용 또는 기본값\nbusinessHours:\"11:00 - 22:00\"}));const allRestaurants=[...restaurantsWithDistance,...restaurantsWithoutLocation];// 거리순으로 정렬 (가까운 순) - 3개만 추천\nconst sortedRestaurants=allRestaurants.sort((a,b)=>a.distance-b.distance).slice(0,3);// 상위 3개만 추천\nsetNearbyRestaurants(sortedRestaurants);setLoading(false);}catch(error){setError('레스토랑 정보를 불러오는데 실패했습니다.');setLoading(false);}},error=>{let errorMessage='위치 정보를 가져올 수 없습니다.';switch(error.code){case error.PERMISSION_DENIED:errorMessage='위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 정보 접근을 허용해주세요.';break;case error.POSITION_UNAVAILABLE:errorMessage='위치 정보를 사용할 수 없습니다.';break;case error.TIMEOUT:errorMessage='위치 정보 요청 시간이 초과되었습니다.';break;}setError(errorMessage);setLoading(false);},{enableHighAccuracy:true,timeout:10000,maximumAge:300000// 5분\n});};// 페이지 로드 시 자동으로 위치 가져오기\nuseEffect(()=>{getUserLocation();},[]);const renderStars=rating=>{const stars=[];for(let i=1;i<=5;i++){stars.push(/*#__PURE__*/_jsx(\"span\",{className:`star ${i<=rating?'filled':''}`,children:\"\\u2605\"},i));}return stars;};// 찜하기 버튼 클릭 핸들러 (토글 기능)\nconst handleFavorite=restaurant=>{if(isInFavorites(restaurant.id)){removeFromFavorites(restaurant.id);alert('찜 목록에서 제거되었습니다! 👋');}else{addToFavorites(restaurant);alert('찜 목록에 추가되었습니다! 🎉');}};// 상세보기 버튼 클릭 핸들러\nconst handleDetail=restaurant=>{setSelectedRestaurant(restaurant);setShowModal(true);};// 모달 닫기\nconst closeModal=()=>{setShowModal(false);setSelectedRestaurant(null);};// 길찾기 버튼 클릭 핸들러\nconst handleNavigate=restaurant=>{const{lat,lng}=restaurant.position;if(lat&&lng){window.open(`https://map.kakao.com/link/to/${restaurant.name},${lat},${lng}`,'_blank');}else{alert('위치 정보가 없어 길찾기를 할 수 없습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCD \\uB0B4 \\uC8FC\\uBCC0 \\uB9DB\\uC9D1 \\uCD94\\uCC9C\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD604\\uC7AC \\uC704\\uCE58\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uAC00\\uAE4C\\uC6B4 \\uB9DB\\uC9D1\\uC744 \\uCD94\\uCC9C\\uD574\\uB4DC\\uB9BD\\uB2C8\\uB2E4!\"}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC704\\uCE58\\uB97C \\uD655\\uC778\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"button\",{className:\"location-btn\",onClick:getUserLocation,children:\"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"})]}),userLocation&&nearbyRestaurants.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"nearby-grid\",children:nearbyRestaurants.map((restaurant,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"nearby-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nearby-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:restaurant.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"distance\",children:[restaurant.distance.toFixed(1),\"km\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rating-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars\",children:renderStars(restaurant.rating)}),/*#__PURE__*/_jsx(\"div\",{className:\"rating-text\",children:restaurant.rating}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-ratings\",children:[\"(\",restaurant.totalRatings||0,\"\\uBA85)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:restaurant.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-meta\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCCD \",restaurant.address]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDD52 \",restaurant.businessHours]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCDE \",restaurant.phone]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDE97 \",restaurant.parking]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nearby-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:`favorite-btn ${isInFavorites(restaurant.id)?'favorited':''}`,onClick:()=>handleFavorite(restaurant),children:isInFavorites(restaurant.id)?'❤️ 찜됨':'🤍 내 목록에 담기'}),/*#__PURE__*/_jsx(\"button\",{className:\"detail-btn\",onClick:()=>handleDetail(restaurant),children:\"\\uD83D\\uDCCB \\uC0C1\\uC138\\uBCF4\\uAE30\"})]})]},restaurant.id))}),showModal&&selectedRestaurant&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:closeModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedRestaurant.name}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:closeModal,children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rating-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars\",children:renderStars(selectedRestaurant.rating)}),/*#__PURE__*/_jsx(\"div\",{className:\"rating-text\",children:selectedRestaurant.rating}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-ratings\",children:[\"(\",selectedRestaurant.totalRatings||0,\"\\uBA85)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"distance-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCD \\uAC70\\uB9AC:\"}),\" \",selectedRestaurant.distance.toFixed(1),\"km\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCD \\uC8FC\\uC18C:\"}),\" \",selectedRestaurant.address]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDD52 \\uC601\\uC5C5\\uC2DC\\uAC04:\"}),\" \",selectedRestaurant.businessHours]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDE \\uC804\\uD654\\uBC88\\uD638:\"}),\" \",selectedRestaurant.phone]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDE97 \\uC8FC\\uCC28:\"}),\" \",selectedRestaurant.parking]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-description\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDD \\uC18C\\uAC1C:\"})}),/*#__PURE__*/_jsx(\"p\",{children:selectedRestaurant.description})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:`modal-btn favorite-btn ${isInFavorites(selectedRestaurant.id)?'favorited':''}`,onClick:()=>handleFavorite(selectedRestaurant),children:isInFavorites(selectedRestaurant.id)?'❤️ 찜됨':'🤍 찜하기'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-btn navigate-btn\",onClick:()=>handleNavigate(selectedRestaurant),children:\"\\uD83D\\uDDFA\\uFE0F \\uAE38\\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-btn close-btn\",onClick:closeModal,children:\"\\uB2EB\\uAE30\"})]})]})})]});};export default LocationBasedRecommendation;","map":{"version":3,"names":["React","useState","useEffect","useFavorites","jsx","_jsx","jsxs","_jsxs","LocationBasedRecommendation","userLocation","setUserLocation","nearbyRestaurants","setNearbyRestaurants","loading","setLoading","error","setError","selectedRestaurant","setSelectedRestaurant","showModal","setShowModal","addToFavorites","removeFromFavorites","isInFavorites","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","fetchRestaurants","response","fetch","ok","Error","data","json","visitCountsResponse","visitCounts","restaurantsWithVisitCounts","map","restaurant","totalRatings","id","console","getUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","restaurants","restaurantsWithDistance","filter","businessHours","restaurantsWithoutLocation","random","allRestaurants","sortedRestaurants","sort","b","slice","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","renderStars","rating","stars","i","push","className","children","handleFavorite","alert","handleDetail","closeModal","handleNavigate","window","open","name","onClick","length","index","toFixed","description","address","phone","parking","e","stopPropagation"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/components/LocationBasedRecommendation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\n\nconst LocationBasedRecommendation = () => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearbyRestaurants, setNearbyRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const { addToFavorites, removeFromFavorites, isInFavorites } = useFavorites();\n\n  // 두 지점 간의 거리 계산 (하버사인 공식)\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const distance = R * c; // km\n    return distance;\n  };\n\n  // 백엔드에서 레스토랑 데이터 가져오기\n  const fetchRestaurants = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/restaurants');\n      if (!response.ok) {\n        throw new Error('레스토랑 정보를 불러오는데 실패했습니다.');\n      }\n      const data = await response.json();\n      \n      // 방문 수 데이터 가져오기\n      const visitCountsResponse = await fetch('http://localhost:8080/api/visits/count/all');\n      let visitCounts = {};\n      if (visitCountsResponse.ok) {\n        visitCounts = await visitCountsResponse.json();\n      }\n      \n      // 방문 수 데이터를 레스토랑 데이터에 추가\n      const restaurantsWithVisitCounts = data.map(restaurant => ({\n        ...restaurant,\n        totalRatings: visitCounts[restaurant.id] || 0\n      }));\n      \n      return restaurantsWithVisitCounts;\n    } catch (error) {\n      console.error('Failed to fetch restaurants:', error);\n      throw error;\n    }\n  };\n\n  // 사용자 위치 가져오기\n  const getUserLocation = async () => {\n    setLoading(true);\n    setError(null);\n\n    if (!navigator.geolocation) {\n      setError('이 브라우저에서는 위치 정보를 지원하지 않습니다.');\n      setLoading(false);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        try {\n          const { latitude, longitude } = position.coords;\n          setUserLocation({ lat: latitude, lng: longitude });\n          \n          // 백엔드에서 레스토랑 데이터 가져오기\n          const restaurants = await fetchRestaurants();\n          \n          // 가까운 식당 찾기 (위도/경도가 있는 경우만)\n          const restaurantsWithDistance = restaurants\n            .filter(restaurant => restaurant.latitude && restaurant.longitude)\n            .map(restaurant => {\n              const distance = calculateDistance(\n                latitude, \n                longitude, \n                restaurant.latitude, \n                restaurant.longitude\n              );\n              return {\n                ...restaurant,\n                distance: distance,\n                position: { lat: restaurant.latitude, lng: restaurant.longitude },\n                businessHours: \"11:00 - 22:00\", // 임시 데이터\n              };\n            });\n\n          // 위도/경도가 없는 경우 기본 위치 데이터 추가\n          const restaurantsWithoutLocation = restaurants\n            .filter(restaurant => !restaurant.latitude || !restaurant.longitude)\n            .map(restaurant => ({\n              ...restaurant,\n              distance: Math.random() * 10 + 1, // 임시 거리 (1-11km)\n              position: restaurant.position || { lat: 37.5665, lng: 126.9780 }, // 기존 position 사용 또는 기본값\n              businessHours: \"11:00 - 22:00\",\n            }));\n\n          const allRestaurants = [...restaurantsWithDistance, ...restaurantsWithoutLocation];\n\n          // 거리순으로 정렬 (가까운 순) - 3개만 추천\n          const sortedRestaurants = allRestaurants\n            .sort((a, b) => a.distance - b.distance)\n            .slice(0, 3); // 상위 3개만 추천\n\n          setNearbyRestaurants(sortedRestaurants);\n          setLoading(false);\n        } catch (error) {\n          setError('레스토랑 정보를 불러오는데 실패했습니다.');\n          setLoading(false);\n        }\n      },\n      (error) => {\n        let errorMessage = '위치 정보를 가져올 수 없습니다.';\n        switch(error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage = '위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 정보 접근을 허용해주세요.';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            errorMessage = '위치 정보를 사용할 수 없습니다.';\n            break;\n          case error.TIMEOUT:\n            errorMessage = '위치 정보 요청 시간이 초과되었습니다.';\n            break;\n        }\n        setError(errorMessage);\n        setLoading(false);\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000 // 5분\n      }\n    );\n  };\n\n  // 페이지 로드 시 자동으로 위치 가져오기\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <span key={i} className={`star ${i <= rating ? 'filled' : ''}`}>\n          ★\n        </span>\n      );\n    }\n    return stars;\n  };\n\n\n\n  // 찜하기 버튼 클릭 핸들러 (토글 기능)\n  const handleFavorite = (restaurant) => {\n    if (isInFavorites(restaurant.id)) {\n      removeFromFavorites(restaurant.id);\n      alert('찜 목록에서 제거되었습니다! 👋');\n    } else {\n      addToFavorites(restaurant);\n      alert('찜 목록에 추가되었습니다! 🎉');\n    }\n  };\n\n  // 상세보기 버튼 클릭 핸들러\n  const handleDetail = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n    setShowModal(true);\n  };\n\n  // 모달 닫기\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedRestaurant(null);\n  };\n\n  // 길찾기 버튼 클릭 핸들러\n  const handleNavigate = (restaurant) => {\n    const { lat, lng } = restaurant.position;\n    if (lat && lng) {\n      window.open(`https://map.kakao.com/link/to/${restaurant.name},${lat},${lng}`, '_blank');\n    } else {\n      alert('위치 정보가 없어 길찾기를 할 수 없습니다.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>📍 내 주변 맛집 추천</h2>\n      <p>현재 위치를 기반으로 가까운 맛집을 추천해드립니다!</p>\n      \n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>위치를 확인하고 있습니다...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <p>⚠️ {error}</p>\n          <button \n            className=\"location-btn\"\n            onClick={getUserLocation}\n          >\n            다시 시도\n          </button>\n        </div>\n      )}\n\n      {userLocation && nearbyRestaurants.length > 0 && (\n        <div className=\"nearby-grid\">\n          {nearbyRestaurants.map((restaurant, index) => (\n            <div key={restaurant.id} className=\"nearby-card\">\n              <div className=\"nearby-header\">\n                <h4>{restaurant.name}</h4>\n                <div className=\"distance\">{restaurant.distance.toFixed(1)}km</div>\n              </div>\n              \n              <div className=\"rating-section\">\n                <div className=\"stars\">\n                  {renderStars(restaurant.rating)}\n                </div>\n                <div className=\"rating-text\">{restaurant.rating}</div>\n                <div className=\"total-ratings\">({restaurant.totalRatings || 0}명)</div>\n              </div>\n              \n              <div className=\"description\">{restaurant.description}</div>\n              \n              <div className=\"restaurant-meta\">\n                <p>📍 {restaurant.address}</p>\n\n                <p>🕒 {restaurant.businessHours}</p>\n                <p>📞 {restaurant.phone}</p>\n                <p>🚗 {restaurant.parking}</p>\n              </div>\n\n\n              \n              <div className=\"nearby-actions\">\n                <button \n                  className={`favorite-btn ${isInFavorites(restaurant.id) ? 'favorited' : ''}`}\n                  onClick={() => handleFavorite(restaurant)}\n                >\n                  {isInFavorites(restaurant.id) ? '❤️ 찜됨' : '🤍 내 목록에 담기'}\n                </button>\n                <button \n                  className=\"detail-btn\"\n                  onClick={() => handleDetail(restaurant)}\n                >\n                  📋 상세보기\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* 상세보기 모달 */}\n      {showModal && selectedRestaurant && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{selectedRestaurant.name}</h2>\n              <button className=\"modal-close\" onClick={closeModal}>✕</button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"restaurant-info\">\n                <div className=\"rating-section\">\n                  <div className=\"stars\">\n                    {renderStars(selectedRestaurant.rating)}\n                  </div>\n                  <div className=\"rating-text\">{selectedRestaurant.rating}</div>\n                  <div className=\"total-ratings\">({selectedRestaurant.totalRatings || 0}명)</div>\n                </div>\n                \n                <div className=\"distance-info\">\n                  <p><strong>📍 거리:</strong> {selectedRestaurant.distance.toFixed(1)}km</p>\n                </div>\n                \n                <div className=\"restaurant-details\">\n                  <p><strong>📍 주소:</strong> {selectedRestaurant.address}</p>\n\n                  <p><strong>🕒 영업시간:</strong> {selectedRestaurant.businessHours}</p>\n                  <p><strong>📞 전화번호:</strong> {selectedRestaurant.phone}</p>\n                  <p><strong>🚗 주차:</strong> {selectedRestaurant.parking}</p>\n                </div>\n                \n                <div className=\"restaurant-description\">\n                  <p><strong>📝 소개:</strong></p>\n                  <p>{selectedRestaurant.description}</p>\n                </div>\n\n\n              </div>\n            </div>\n            \n            <div className=\"modal-actions\">\n              <button \n                className={`modal-btn favorite-btn ${isInFavorites(selectedRestaurant.id) ? 'favorited' : ''}`}\n                onClick={() => handleFavorite(selectedRestaurant)}\n              >\n                {isInFavorites(selectedRestaurant.id) ? '❤️ 찜됨' : '🤍 찜하기'}\n              </button>\n              <button \n                className=\"modal-btn navigate-btn\"\n                onClick={() => handleNavigate(selectedRestaurant)}\n              >\n                🗺️ 길찾기\n              </button>\n              <button \n                className=\"modal-btn close-btn\"\n                onClick={closeModal}\n              >\n                닫기\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationBasedRecommendation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}