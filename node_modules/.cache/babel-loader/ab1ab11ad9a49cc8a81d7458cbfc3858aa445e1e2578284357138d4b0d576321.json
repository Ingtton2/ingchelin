{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useFavorites}from'../context/FavoriteContext';import{useAuth}from'../context/AuthContext';import{useNavigate}from'react-router-dom';import{supabase}from'../services/supabase';import'./Favorites.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Favorites(){const{favorites,removeFromFavorites}=useFavorites();const{currentUser}=useAuth();const navigate=useNavigate();console.log('Favorites 컴포넌트 렌더링:',{favoritesCount:favorites.length,currentUser:currentUser===null||currentUser===void 0?void 0:currentUser.id,currentUserEmail:currentUser===null||currentUser===void 0?void 0:currentUser.email,favorites:favorites.map(f=>({id:f.id,name:f.name,cuisine:f.cuisine}))});const[userRatings,setUserRatings]=useState({});const[showRatingModal,setShowRatingModal]=useState(false);const[selectedRestaurant,setSelectedRestaurant]=useState(null);const[showVisitConfirmModal,setShowVisitConfirmModal]=useState(false);const[pendingRating,setPendingRating]=useState(null);// 사용자 평점 불러오기 (Supabase 직접 연결)\nconst loadUserRatings=async()=>{if(!currentUser)return;try{// Supabase에서 사용자 리뷰 가져오기\nconst{data:reviews,error}=await supabase.from('reviews').select('*').eq('user_id',currentUser.id);if(error){console.error('평점 불러오기 실패:',error);return;}const ratingsMap={};reviews.forEach(review=>{ratingsMap[review.restaurant_id]={...ratingsMap[review.restaurant_id],[currentUser.id]:review.rating};});setUserRatings(ratingsMap);console.log('Supabase에서 평점 로드 완료:',reviews.length,'개');}catch(error){console.error('평점 불러오기 실패:',error);}};// 사용자 로그인 시 평점 불러오기\nuseEffect(()=>{if(currentUser){loadUserRatings();}else{setUserRatings({});}},[currentUser]);const getCategoryIcon=category=>{if(!category)return'🍽️';const icons={'한식':'🍚','양식':'🍝','일식':'🍣','중식':'🥢','동남아식':'🍜','카페':'☕','기타':'🍽️'};return icons[category]||'🍽️';};const getCategoryColor=category=>{if(!category)return'#667eea';const colors={'한식':'#FF6B6B','양식':'#4ECDC4','일식':'#45B7D1','중식':'#96CEB4','동남아식':'#FFEAA7','카페':'#DDA0DD','기타':'#667eea'};return colors[category]||'#667eea';};// 방문 확인 모달 열기\nconst openVisitConfirmModal=(restaurantId,rating)=>{setPendingRating({restaurantId,rating});setShowVisitConfirmModal(true);};// 방문 확인 처리\nconst handleVisitConfirm=async hasVisited=>{setShowVisitConfirmModal(false);if(!hasVisited){alert('방문하지 않은 맛집에는 별점을 매길 수 없습니다.\\n\\n먼저 맛집을 방문해보세요! 🍽️');return;}// 방문했다면 평점 저장 진행\nawait handleRatingSubmit(pendingRating.restaurantId,pendingRating.rating);setPendingRating(null);};// 사용자 평점 처리 (Supabase 직접 연결)\nconst handleRatingSubmit=async(restaurantId,rating)=>{if(!currentUser){alert('평점을 남기려면 로그인이 필요합니다.');return;}console.log('평점 저장 시도:',{currentUser:currentUser.id,restaurantId:restaurantId,rating:rating,restaurantIdType:typeof restaurantId,ratingType:typeof rating});try{// 데이터 타입 확인 및 변환\nconst userId=parseInt(currentUser.id);const restaurantIdInt=parseInt(restaurantId);const ratingInt=parseInt(rating);if(isNaN(userId)||isNaN(restaurantIdInt)||isNaN(ratingInt)){console.error('데이터 타입 오류:',{userId,restaurantIdInt,ratingInt});alert('데이터 형식이 올바르지 않습니다.');return;}console.log('변환된 데이터:',{userId,restaurantIdInt,ratingInt});// 기존 리뷰가 있는지 확인\nconst{data:existingReview,error:checkError}=await supabase.from('reviews').select('*').eq('user_id',userId).eq('restaurant_id',restaurantIdInt).single();console.log('기존 리뷰 확인 결과:',{existingReview,checkError});if(checkError&&checkError.code!=='PGRST116'){console.error('기존 리뷰 확인 실패:',checkError);}// 기존 리뷰가 있으면 업데이트, 없으면 새로 생성\nif(existingReview){console.log('기존 리뷰 업데이트 시작');// 기존 리뷰 업데이트\nconst{error:updateError}=await supabase.from('reviews').update({rating:ratingInt,comment:`${ratingInt}점 평가`,updated_at:new Date().toISOString()}).eq('user_id',userId).eq('restaurant_id',restaurantIdInt);if(updateError){console.error('리뷰 업데이트 실패:',updateError);alert(`평점 업데이트에 실패했습니다: ${updateError.message}`);return;}console.log('기존 리뷰 업데이트 완료');}else{console.log('새 리뷰 생성 시작');// 새 리뷰 생성\nconst{error:insertError}=await supabase.from('reviews').insert({user_id:userId,restaurant_id:restaurantIdInt,rating:ratingInt,comment:`${ratingInt}점 평가`});if(insertError){console.error('리뷰 저장 실패:',insertError);alert(`평점 저장에 실패했습니다: ${insertError.message}`);return;}console.log('새 리뷰 저장 완료');}// 방문 기록도 함께 저장 (중복 방지)\nconsole.log('방문 기록 확인 시작');const{data:existingVisit,error:visitCheckError}=await supabase.from('visits').select('*').eq('user_id',userId).eq('restaurant_id',restaurantIdInt).single();console.log('방문 기록 확인 결과:',{existingVisit,visitCheckError});if(visitCheckError&&visitCheckError.code!=='PGRST116'){console.error('기존 방문 기록 확인 실패:',visitCheckError);}if(!existingVisit){console.log('새 방문 기록 생성 시작');// 방문 기록이 없으면 새로 생성\nconst{error:visitError}=await supabase.from('visits').insert({user_id:userId,restaurant_id:restaurantIdInt,rating:ratingInt,review:`${ratingInt}점 평가`});if(visitError){console.error('방문 기록 저장 실패:',visitError);// 방문 기록 실패는 경고만 표시하고 계속 진행\nconsole.warn('방문 기록 저장 실패했지만 리뷰는 저장됨');}else{console.log('방문 기록 저장 완료');}}else{console.log('기존 방문 기록 존재');}// 성공 시 상태 업데이트\nconst newUserRatings={...userRatings,[restaurantId]:{...userRatings[restaurantId],[currentUser.id]:ratingInt}};setUserRatings(newUserRatings);localStorage.setItem('userRatings',JSON.stringify(newUserRatings));setShowRatingModal(false);setSelectedRestaurant(null);alert('평점이 저장되었습니다! ⭐');console.log('Supabase에 평점 저장 완료');}catch(error){console.error('평점 저장 중 예상치 못한 오류:',error);alert(`평점 저장 중 오류가 발생했습니다: ${error.message}`);}};// 별점 클릭 처리\nconst handleRating=(restaurantId,rating)=>{openVisitConfirmModal(restaurantId,rating);};// 사용자 평점 가져오기\nconst getUserRating=restaurantId=>{if(!currentUser||!userRatings[restaurantId])return 0;return userRatings[restaurantId][currentUser.id]||0;};// 평가 모달 열기\nconst openRatingModal=restaurant=>{setSelectedRestaurant(restaurant);setShowRatingModal(true);};// 지도 페이지로 이동 (특정 식당 위치로)\nconst goToMap=restaurant=>{// 식당에 location 정보가 있는지 확인 (맛집 목록에서는 location 사용)\nif(restaurant.location&&restaurant.location.lat&&restaurant.location.lng){// 식당 정보를 URL 파라미터로 전달\nnavigate(`/map?restaurant=${restaurant.id}&lat=${restaurant.location.lat}&lng=${restaurant.location.lng}`);}else if(restaurant.position&&restaurant.position.lat&&restaurant.position.lng){// position 정보가 있는 경우 (지도 페이지에서 사용)\nnavigate(`/map?restaurant=${restaurant.id}&lat=${restaurant.position.lat}&lng=${restaurant.position.lng}`);}else{// 위치 정보가 없으면 기본 지도 페이지로 이동\nnavigate('/map');}};if(favorites.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"favorites-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"favorites-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDC96 \\uB0B4 \\uCC1C \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB9C8\\uC74C\\uC5D0 \\uB4DC\\uB294 \\uB9DB\\uC9D1\\uC744 \\uCC1C\\uD574\\uBCF4\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"empty-favorites\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"empty-icon\",children:\"\\uD83D\\uDC94\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC544\\uC9C1 \\uCC1C\\uD55C \\uB9DB\\uC9D1\\uC774 \\uC5C6\\uC5B4\\uC694\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uB9DB\\uC9D1 \\uBAA9\\uB85D\\uC5D0\\uC11C \\\"\\uB0B4 \\uBAA9\\uB85D\\uC5D0 \\uB2F4\\uAE30\\\" \\uBC84\\uD2BC\\uC744 \\uB20C\\uB7EC\\uC11C\",/*#__PURE__*/_jsx(\"br\",{}),\"\\uB9C8\\uC74C\\uC5D0 \\uB4DC\\uB294 \\uB9DB\\uC9D1\\uC744 \\uCC1C\\uD574\\uBCF4\\uC138\\uC694!\"]})]})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"favorites-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"favorites-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDC96 \\uB0B4 \\uCC1C \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uCD1D \",favorites.length,\"\\uAC1C\\uC758 \\uB9DB\\uC9D1\\uC744 \\uCC1C\\uD558\\uC168\\uB124\\uC694!\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"favorites-grid\",children:favorites.map(restaurant=>/*#__PURE__*/_jsxs(\"div\",{className:\"favorite-card\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsx(\"button\",{className:\"remove-btn\",onClick:e=>{e.preventDefault();e.stopPropagation();console.log('X 버튼 클릭됨:',restaurant.id,restaurant.name);// 사용자 확인\nif(window.confirm(`${restaurant.name}을 찜 목록에서 제거하시겠습니까?`)){removeFromFavorites(restaurant.id);}},onMouseDown:e=>e.stopPropagation(),title:\"\\uCC1C \\uBAA9\\uB85D\\uC5D0\\uC11C \\uC81C\\uAC70\",\"aria-label\":`${restaurant.name}을 찜 목록에서 제거`,children:\"\\u274C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-info\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"restaurant-name\",children:restaurant.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"category-badge\",style:{backgroundColor:getCategoryColor(restaurant.cuisine||restaurant.category)},children:[getCategoryIcon(restaurant.cuisine||restaurant.category),\" \",restaurant.cuisine||restaurant.category||'기타']})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rating\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"stars\",children:\"\\u2605\\u2605\\u2605\\u2605\\u2605\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-number\",children:restaurant.rating})]}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:restaurant.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"address\",children:[\"\\uD83D\\uDCCD \",restaurant.address]}),/*#__PURE__*/_jsxs(\"p\",{className:\"price\",children:[\"\\uD83D\\uDCB0 \",restaurant.price]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"view-map-btn\",onClick:()=>goToMap(restaurant),children:\"\\uD83D\\uDDFA\\uFE0F \\uC9C0\\uB3C4\\uC5D0\\uC11C \\uBCF4\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"rating-btn\",onClick:()=>openRatingModal(restaurant),children:\"\\u2B50 \\uD3C9\\uAC00\\uD558\\uAE30\"})]})]},restaurant.id))}),showRatingModal&&selectedRestaurant&&/*#__PURE__*/_jsx(\"div\",{className:\"rating-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"rating-modal-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rating-modal-header\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[selectedRestaurant.name,\" \\uD3C9\\uAC00\\uD558\\uAE30\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>{setShowRatingModal(false);setSelectedRestaurant(null);},children:\"\\u2715\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rating-modal-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-info-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"category-badge\",style:{backgroundColor:getCategoryColor(selectedRestaurant.category)},children:[getCategoryIcon(selectedRestaurant.category),\" \",selectedRestaurant.category]}),/*#__PURE__*/_jsx(\"p\",{className:\"description\",children:selectedRestaurant.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"address\",children:[\"\\uD83D\\uDCCD \",selectedRestaurant.address]}),/*#__PURE__*/_jsxs(\"p\",{className:\"price\",children:[\"\\uD83D\\uDCB0 \",selectedRestaurant.price]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rating-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\uBCC4\\uC810 \\uD3C9\\uAC00\"}),/*#__PURE__*/_jsx(\"div\",{className:\"star-rating\",children:[1,2,3,4,5].map(star=>/*#__PURE__*/_jsx(\"button\",{className:`star-btn ${getUserRating(selectedRestaurant.id)>=star?'filled':''}`,onClick:()=>handleRating(selectedRestaurant.id,star),children:\"\\u2605\"},star))}),/*#__PURE__*/_jsxs(\"p\",{className:\"rating-text\",children:[\"\\uD604\\uC7AC \\uD3C9\\uC810: \",getUserRating(selectedRestaurant.id),\"\\uC810\"]})]})]})]})}),showVisitConfirmModal&&/*#__PURE__*/_jsx(\"div\",{className:\"visit-confirm-modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"visit-confirm-modal-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"visit-confirm-modal-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\uBC29\\uBB38 \\uD655\\uC778\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"visit-confirm-modal-body\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC774 \\uB9DB\\uC9D1\\uC744 \\uBC29\\uBB38\\uD558\\uC168\\uB098\\uC694?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"visit-note\",children:\"\\uBC29\\uBB38\\uD558\\uC9C0 \\uC54A\\uC558\\uB2E4\\uBA74 \\uBCC4\\uC810\\uC744 \\uB9E4\\uAE38 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visit-confirm-modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"visit-confirm-btn yes\",onClick:()=>handleVisitConfirm(true),children:\"\\uB124\"}),/*#__PURE__*/_jsx(\"button\",{className:\"visit-confirm-btn no\",onClick:()=>handleVisitConfirm(false),children:\"\\uC544\\uB2C8\\uC624\"})]})]})})]});}export default Favorites;","map":{"version":3,"names":["React","useState","useEffect","useFavorites","useAuth","useNavigate","supabase","jsx","_jsx","jsxs","_jsxs","Favorites","favorites","removeFromFavorites","currentUser","navigate","console","log","favoritesCount","length","id","currentUserEmail","email","map","f","name","cuisine","userRatings","setUserRatings","showRatingModal","setShowRatingModal","selectedRestaurant","setSelectedRestaurant","showVisitConfirmModal","setShowVisitConfirmModal","pendingRating","setPendingRating","loadUserRatings","data","reviews","error","from","select","eq","ratingsMap","forEach","review","restaurant_id","rating","getCategoryIcon","category","icons","getCategoryColor","colors","openVisitConfirmModal","restaurantId","handleVisitConfirm","hasVisited","alert","handleRatingSubmit","restaurantIdType","ratingType","userId","parseInt","restaurantIdInt","ratingInt","isNaN","existingReview","checkError","single","code","updateError","update","comment","updated_at","Date","toISOString","message","insertError","insert","user_id","existingVisit","visitCheckError","visitError","warn","newUserRatings","localStorage","setItem","JSON","stringify","handleRating","getUserRating","openRatingModal","restaurant","goToMap","location","lat","lng","position","className","children","onClick","e","stopPropagation","preventDefault","window","confirm","onMouseDown","title","style","backgroundColor","description","address","price","star"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/pages/Favorites.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { useAuth } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../services/supabase';\nimport './Favorites.css';\n\nfunction Favorites() {\n  const { favorites, removeFromFavorites } = useFavorites();\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  \n  console.log('Favorites 컴포넌트 렌더링:', { \n    favoritesCount: favorites.length, \n    currentUser: currentUser?.id,\n    currentUserEmail: currentUser?.email,\n    favorites: favorites.map(f => ({ id: f.id, name: f.name, cuisine: f.cuisine }))\n  });\n  const [userRatings, setUserRatings] = useState({});\n  const [showRatingModal, setShowRatingModal] = useState(false);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [showVisitConfirmModal, setShowVisitConfirmModal] = useState(false);\n  const [pendingRating, setPendingRating] = useState(null);\n\n  // 사용자 평점 불러오기 (Supabase 직접 연결)\n  const loadUserRatings = async () => {\n    if (!currentUser) return;\n    \n    try {\n      // Supabase에서 사용자 리뷰 가져오기\n      const { data: reviews, error } = await supabase\n        .from('reviews')\n        .select('*')\n        .eq('user_id', currentUser.id);\n      \n      if (error) {\n        console.error('평점 불러오기 실패:', error);\n        return;\n      }\n      \n      const ratingsMap = {};\n      reviews.forEach(review => {\n        ratingsMap[review.restaurant_id] = {\n          ...ratingsMap[review.restaurant_id],\n          [currentUser.id]: review.rating\n        };\n      });\n      setUserRatings(ratingsMap);\n      console.log('Supabase에서 평점 로드 완료:', reviews.length, '개');\n    } catch (error) {\n      console.error('평점 불러오기 실패:', error);\n    }\n  };\n\n  // 사용자 로그인 시 평점 불러오기\n  useEffect(() => {\n    if (currentUser) {\n      loadUserRatings();\n    } else {\n      setUserRatings({});\n    }\n  }, [currentUser]);\n\n  const getCategoryIcon = (category) => {\n    if (!category) return '🍽️';\n    const icons = {\n      '한식': '🍚',\n      '양식': '🍝',\n      '일식': '🍣',\n      '중식': '🥢',\n      '동남아식': '🍜',\n      '카페': '☕',\n      '기타': '🍽️'\n    };\n    return icons[category] || '🍽️';\n  };\n\n  const getCategoryColor = (category) => {\n    if (!category) return '#667eea';\n    const colors = {\n      '한식': '#FF6B6B',\n      '양식': '#4ECDC4',\n      '일식': '#45B7D1',\n      '중식': '#96CEB4',\n      '동남아식': '#FFEAA7',\n      '카페': '#DDA0DD',\n      '기타': '#667eea'\n    };\n    return colors[category] || '#667eea';\n  };\n\n  // 방문 확인 모달 열기\n  const openVisitConfirmModal = (restaurantId, rating) => {\n    setPendingRating({ restaurantId, rating });\n    setShowVisitConfirmModal(true);\n  };\n\n  // 방문 확인 처리\n  const handleVisitConfirm = async (hasVisited) => {\n    setShowVisitConfirmModal(false);\n    \n    if (!hasVisited) {\n      alert('방문하지 않은 맛집에는 별점을 매길 수 없습니다.\\n\\n먼저 맛집을 방문해보세요! 🍽️');\n      return;\n    }\n\n    // 방문했다면 평점 저장 진행\n    await handleRatingSubmit(pendingRating.restaurantId, pendingRating.rating);\n    setPendingRating(null);\n  };\n\n  // 사용자 평점 처리 (Supabase 직접 연결)\n  const handleRatingSubmit = async (restaurantId, rating) => {\n    if (!currentUser) {\n      alert('평점을 남기려면 로그인이 필요합니다.');\n      return;\n    }\n\n    console.log('평점 저장 시도:', { \n      currentUser: currentUser.id, \n      restaurantId: restaurantId, \n      rating: rating,\n      restaurantIdType: typeof restaurantId,\n      ratingType: typeof rating\n    });\n\n    try {\n      // 데이터 타입 확인 및 변환\n      const userId = parseInt(currentUser.id);\n      const restaurantIdInt = parseInt(restaurantId);\n      const ratingInt = parseInt(rating);\n\n      if (isNaN(userId) || isNaN(restaurantIdInt) || isNaN(ratingInt)) {\n        console.error('데이터 타입 오류:', { userId, restaurantIdInt, ratingInt });\n        alert('데이터 형식이 올바르지 않습니다.');\n        return;\n      }\n\n      console.log('변환된 데이터:', { userId, restaurantIdInt, ratingInt });\n\n      // 기존 리뷰가 있는지 확인\n      const { data: existingReview, error: checkError } = await supabase\n        .from('reviews')\n        .select('*')\n        .eq('user_id', userId)\n        .eq('restaurant_id', restaurantIdInt)\n        .single();\n\n      console.log('기존 리뷰 확인 결과:', { existingReview, checkError });\n\n      if (checkError && checkError.code !== 'PGRST116') {\n        console.error('기존 리뷰 확인 실패:', checkError);\n      }\n\n      // 기존 리뷰가 있으면 업데이트, 없으면 새로 생성\n      if (existingReview) {\n        console.log('기존 리뷰 업데이트 시작');\n        // 기존 리뷰 업데이트\n        const { error: updateError } = await supabase\n          .from('reviews')\n          .update({\n            rating: ratingInt,\n            comment: `${ratingInt}점 평가`,\n            updated_at: new Date().toISOString()\n          })\n          .eq('user_id', userId)\n          .eq('restaurant_id', restaurantIdInt);\n\n        if (updateError) {\n          console.error('리뷰 업데이트 실패:', updateError);\n          alert(`평점 업데이트에 실패했습니다: ${updateError.message}`);\n          return;\n        }\n        console.log('기존 리뷰 업데이트 완료');\n      } else {\n        console.log('새 리뷰 생성 시작');\n        // 새 리뷰 생성\n        const { error: insertError } = await supabase\n          .from('reviews')\n          .insert({\n            user_id: userId,\n            restaurant_id: restaurantIdInt,\n            rating: ratingInt,\n            comment: `${ratingInt}점 평가`\n          });\n\n        if (insertError) {\n          console.error('리뷰 저장 실패:', insertError);\n          alert(`평점 저장에 실패했습니다: ${insertError.message}`);\n          return;\n        }\n        console.log('새 리뷰 저장 완료');\n      }\n\n      // 방문 기록도 함께 저장 (중복 방지)\n      console.log('방문 기록 확인 시작');\n      const { data: existingVisit, error: visitCheckError } = await supabase\n        .from('visits')\n        .select('*')\n        .eq('user_id', userId)\n        .eq('restaurant_id', restaurantIdInt)\n        .single();\n\n      console.log('방문 기록 확인 결과:', { existingVisit, visitCheckError });\n\n      if (visitCheckError && visitCheckError.code !== 'PGRST116') {\n        console.error('기존 방문 기록 확인 실패:', visitCheckError);\n      }\n\n      if (!existingVisit) {\n        console.log('새 방문 기록 생성 시작');\n        // 방문 기록이 없으면 새로 생성\n        const { error: visitError } = await supabase\n          .from('visits')\n          .insert({\n            user_id: userId,\n            restaurant_id: restaurantIdInt,\n            rating: ratingInt,\n            review: `${ratingInt}점 평가`\n          });\n\n        if (visitError) {\n          console.error('방문 기록 저장 실패:', visitError);\n          // 방문 기록 실패는 경고만 표시하고 계속 진행\n          console.warn('방문 기록 저장 실패했지만 리뷰는 저장됨');\n        } else {\n          console.log('방문 기록 저장 완료');\n        }\n      } else {\n        console.log('기존 방문 기록 존재');\n      }\n\n      // 성공 시 상태 업데이트\n      const newUserRatings = {\n        ...userRatings,\n        [restaurantId]: {\n          ...userRatings[restaurantId],\n          [currentUser.id]: ratingInt\n        }\n      };\n\n      setUserRatings(newUserRatings);\n      localStorage.setItem('userRatings', JSON.stringify(newUserRatings));\n      setShowRatingModal(false);\n      setSelectedRestaurant(null);\n      alert('평점이 저장되었습니다! ⭐');\n      console.log('Supabase에 평점 저장 완료');\n    } catch (error) {\n      console.error('평점 저장 중 예상치 못한 오류:', error);\n      alert(`평점 저장 중 오류가 발생했습니다: ${error.message}`);\n    }\n  };\n\n  // 별점 클릭 처리\n  const handleRating = (restaurantId, rating) => {\n    openVisitConfirmModal(restaurantId, rating);\n  };\n\n  // 사용자 평점 가져오기\n  const getUserRating = (restaurantId) => {\n    if (!currentUser || !userRatings[restaurantId]) return 0;\n    return userRatings[restaurantId][currentUser.id] || 0;\n  };\n\n  // 평가 모달 열기\n  const openRatingModal = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n    setShowRatingModal(true);\n  };\n\n  // 지도 페이지로 이동 (특정 식당 위치로)\n  const goToMap = (restaurant) => {\n    // 식당에 location 정보가 있는지 확인 (맛집 목록에서는 location 사용)\n    if (restaurant.location && restaurant.location.lat && restaurant.location.lng) {\n      // 식당 정보를 URL 파라미터로 전달\n      navigate(`/map?restaurant=${restaurant.id}&lat=${restaurant.location.lat}&lng=${restaurant.location.lng}`);\n    } else if (restaurant.position && restaurant.position.lat && restaurant.position.lng) {\n      // position 정보가 있는 경우 (지도 페이지에서 사용)\n      navigate(`/map?restaurant=${restaurant.id}&lat=${restaurant.position.lat}&lng=${restaurant.position.lng}`);\n    } else {\n      // 위치 정보가 없으면 기본 지도 페이지로 이동\n      navigate('/map');\n    }\n  };\n\n  if (favorites.length === 0) {\n    return (\n      <div className=\"favorites-container\">\n        <div className=\"favorites-header\">\n          <h2>💖 내 찜 목록</h2>\n          <p>마음에 드는 맛집을 찜해보세요!</p>\n        </div>\n        <div className=\"empty-favorites\">\n          <div className=\"empty-icon\">💔</div>\n          <h3>아직 찜한 맛집이 없어요</h3>\n          <p>맛집 목록에서 \"내 목록에 담기\" 버튼을 눌러서<br />마음에 드는 맛집을 찜해보세요!</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"favorites-container\">\n      <div className=\"favorites-header\">\n        <h2>💖 내 찜 목록</h2>\n        <p>총 {favorites.length}개의 맛집을 찜하셨네요!</p>\n      </div>\n\n      <div className=\"favorites-grid\">\n        {favorites.map((restaurant) => (\n          <div key={restaurant.id} className=\"favorite-card\" onClick={(e) => e.stopPropagation()}>\n            <button \n              className=\"remove-btn\"\n              onClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                console.log('X 버튼 클릭됨:', restaurant.id, restaurant.name);\n                \n                // 사용자 확인\n                if (window.confirm(`${restaurant.name}을 찜 목록에서 제거하시겠습니까?`)) {\n                  removeFromFavorites(restaurant.id);\n                }\n              }}\n              onMouseDown={(e) => e.stopPropagation()}\n              title=\"찜 목록에서 제거\"\n              aria-label={`${restaurant.name}을 찜 목록에서 제거`}\n            >\n              ❌\n            </button>\n                          <div className=\"card-header\">\n                <div className=\"restaurant-info\">\n                  <h3 className=\"restaurant-name\">{restaurant.name}</h3>\n                  <div className=\"category-badge\" style={{ backgroundColor: getCategoryColor(restaurant.cuisine || restaurant.category) }}>\n                    {getCategoryIcon(restaurant.cuisine || restaurant.category)} {restaurant.cuisine || restaurant.category || '기타'}\n                  </div>\n                </div>\n              </div>\n\n            <div className=\"card-body\">\n              <div className=\"rating\">\n                <span className=\"stars\">★★★★★</span>\n                <span className=\"rating-number\">{restaurant.rating}</span>\n              </div>\n              \n              <p className=\"description\">{restaurant.description}</p>\n              \n              <div className=\"details\">\n                <p className=\"address\">📍 {restaurant.address}</p>\n                <p className=\"price\">💰 {restaurant.price}</p>\n              </div>\n            </div>\n\n            <div className=\"card-actions\">\n              <button \n                className=\"view-map-btn\"\n                onClick={() => goToMap(restaurant)}\n              >\n                🗺️ 지도에서 보기\n              </button>\n              <button \n                className=\"rating-btn\"\n                onClick={() => openRatingModal(restaurant)}\n              >\n                ⭐ 평가하기\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* 평가 모달 */}\n      {showRatingModal && selectedRestaurant && (\n        <div className=\"rating-modal\">\n          <div className=\"rating-modal-content\">\n            <div className=\"rating-modal-header\">\n              <h3>{selectedRestaurant.name} 평가하기</h3>\n              <button \n                className=\"close-btn\"\n                onClick={() => {\n                  setShowRatingModal(false);\n                  setSelectedRestaurant(null);\n                }}\n              >\n                ✕\n              </button>\n            </div>\n            <div className=\"rating-modal-body\">\n              <div className=\"restaurant-info-modal\">\n                <div className=\"category-badge\" style={{ backgroundColor: getCategoryColor(selectedRestaurant.category) }}>\n                  {getCategoryIcon(selectedRestaurant.category)} {selectedRestaurant.category}\n                </div>\n                <p className=\"description\">{selectedRestaurant.description}</p>\n                <div className=\"details\">\n                  <p className=\"address\">📍 {selectedRestaurant.address}</p>\n                  <p className=\"price\">💰 {selectedRestaurant.price}</p>\n                </div>\n              </div>\n              \n              <div className=\"rating-section\">\n                <h4>별점 평가</h4>\n                <div className=\"star-rating\">\n                  {[1, 2, 3, 4, 5].map(star => (\n                    <button\n                      key={star}\n                      className={`star-btn ${getUserRating(selectedRestaurant.id) >= star ? 'filled' : ''}`}\n                      onClick={() => handleRating(selectedRestaurant.id, star)}\n                    >\n                      ★\n                    </button>\n                  ))}\n                </div>\n                <p className=\"rating-text\">\n                  현재 평점: {getUserRating(selectedRestaurant.id)}점\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 방문 확인 모달 */}\n      {showVisitConfirmModal && (\n        <div className=\"visit-confirm-modal\">\n          <div className=\"visit-confirm-modal-content\">\n            <div className=\"visit-confirm-modal-header\">\n              <h3>방문 확인</h3>\n            </div>\n            <div className=\"visit-confirm-modal-body\">\n              <p>이 맛집을 방문하셨나요?</p>\n              <p className=\"visit-note\">방문하지 않았다면 별점을 매길 수 없습니다.</p>\n            </div>\n            <div className=\"visit-confirm-modal-actions\">\n              <button \n                className=\"visit-confirm-btn yes\"\n                onClick={() => handleVisitConfirm(true)}\n              >\n                네\n              </button>\n              <button \n                className=\"visit-confirm-btn no\"\n                onClick={() => handleVisitConfirm(false)}\n              >\n                아니오\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Favorites; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}