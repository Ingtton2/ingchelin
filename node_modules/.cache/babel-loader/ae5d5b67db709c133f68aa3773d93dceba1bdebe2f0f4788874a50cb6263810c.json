{"ast":null,"code":"import { createClient } from '@supabase/supabase-js';\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://dummy.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'dummy-key';\n\n// 환경변수가 없으면 더미 클라이언트 생성\nlet supabase;\ntry {\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n} catch (error) {\n  console.warn('Supabase 클라이언트 생성 실패:', error);\n  // 더미 객체 생성\n  supabase = {\n    from: () => ({\n      select: () => ({\n        data: [],\n        error: null\n      }),\n      insert: () => ({\n        data: null,\n        error: new Error('Supabase not configured')\n      }),\n      update: () => ({\n        data: null,\n        error: new Error('Supabase not configured')\n      }),\n      delete: () => ({\n        error: new Error('Supabase not configured')\n      })\n    })\n  };\n}\nexport { supabase };\n\n// Supabase를 통한 직접 데이터 접근 (백엔드 없이 사용 가능)\nexport const supabaseAPI = {\n  // 모든 레스토랑 조회\n  getAll: async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*');\n    if (error) throw error;\n    return data;\n  },\n  // ID로 레스토랑 조회\n  getById: async id => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').eq('id', id).single();\n    if (error) throw error;\n    return data;\n  },\n  // 요리 타입으로 검색\n  getByCuisine: async cuisine => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').eq('cuisine', cuisine);\n    if (error) throw error;\n    return data;\n  },\n  // 평점으로 검색\n  getByRating: async rating => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').gte('rating', rating);\n    if (error) throw error;\n    return data;\n  },\n  // 랜덤 레스토랑 추천\n  getRandom: async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').limit(1).order('id', {\n      ascending: false\n    });\n    if (error) throw error;\n    return data[0];\n  }\n};","map":{"version":3,"names":["createClient","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseAnonKey","REACT_APP_SUPABASE_ANON_KEY","supabase","error","console","warn","from","select","data","insert","Error","update","delete","supabaseAPI","getAll","getById","id","eq","single","getByCuisine","cuisine","getByRating","rating","gte","getRandom","limit","order","ascending"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/services/supabase.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://dummy.supabase.co';\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'dummy-key';\n\n// 환경변수가 없으면 더미 클라이언트 생성\nlet supabase;\ntry {\n  supabase = createClient(supabaseUrl, supabaseAnonKey);\n} catch (error) {\n  console.warn('Supabase 클라이언트 생성 실패:', error);\n  // 더미 객체 생성\n  supabase = {\n    from: () => ({\n      select: () => ({ data: [], error: null }),\n      insert: () => ({ data: null, error: new Error('Supabase not configured') }),\n      update: () => ({ data: null, error: new Error('Supabase not configured') }),\n      delete: () => ({ error: new Error('Supabase not configured') })\n    })\n  };\n}\n\nexport { supabase };\n\n// Supabase를 통한 직접 데이터 접근 (백엔드 없이 사용 가능)\nexport const supabaseAPI = {\n  // 모든 레스토랑 조회\n  getAll: async () => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*');\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // ID로 레스토랑 조회\n  getById: async (id) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // 요리 타입으로 검색\n  getByCuisine: async (cuisine) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .eq('cuisine', cuisine);\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // 평점으로 검색\n  getByRating: async (rating) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .gte('rating', rating);\n    \n    if (error) throw error;\n    return data;\n  },\n  \n  // 랜덤 레스토랑 추천\n  getRandom: async () => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .limit(1)\n      .order('id', { ascending: false });\n    \n    if (error) throw error;\n    return data[0];\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}