{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useFavorites}from'../context/FavoriteContext';import{supabase}from'../services/supabase';import{restaurantData}from'../data/restaurantData';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LocationBasedRecommendation=()=>{const[userLocation,setUserLocation]=useState(null);const[nearbyRestaurants,setNearbyRestaurants]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[selectedRestaurant,setSelectedRestaurant]=useState(null);const[showModal,setShowModal]=useState(false);const{addToFavorites,removeFromFavorites,isInFavorites}=useFavorites();// 두 지점 간의 거리 계산 (하버사인 공식)\nconst calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// 지구의 반지름 (km)\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));const distance=R*c;// km\nreturn distance;};// Supabase에서 레스토랑 데이터 가져오기\nconst fetchRestaurants=async()=>{try{// Supabase에서 레스토랑 데이터 가져오기\nconst{data,error}=await supabase.from('restaurants').select('*');if(error){console.warn('Supabase 연결 실패, 기본 데이터 사용:',error);// 기본 데이터 반환\nreturn restaurantData.map(restaurant=>({id:restaurant.id,name:restaurant.name,cuisine:restaurant.category,rating:restaurant.rating,address:restaurant.address,description:restaurant.description,latitude:restaurant.position.lat,longitude:restaurant.position.lng,phone:restaurant.phone,parking:restaurant.parking,businessHours:restaurant.hours,totalRatings:Math.floor(Math.random()*100)+10// 임시 데이터\n}));}// Supabase 데이터가 있으면 사용, 없으면 기본 데이터 사용\nif(data&&data.length>0){console.log('Supabase 데이터 사용:',data.length,'개 레스토랑');return data.map(restaurant=>({...restaurant,totalRatings:Math.floor(Math.random()*100)+10// 임시 데이터\n}));}else{console.log('Supabase 데이터 없음, 기본 데이터 사용');return restaurantData.map(restaurant=>({id:restaurant.id,name:restaurant.name,cuisine:restaurant.category,rating:restaurant.rating,address:restaurant.address,description:restaurant.description,latitude:restaurant.position.lat,longitude:restaurant.position.lng,phone:restaurant.phone,parking:restaurant.parking,businessHours:restaurant.hours,totalRatings:Math.floor(Math.random()*100)+10// 임시 데이터\n}));}}catch(error){console.warn('API 호출 실패, 기본 데이터 사용:',error);return restaurantData.map(restaurant=>({id:restaurant.id,name:restaurant.name,cuisine:restaurant.category,rating:restaurant.rating,address:restaurant.address,description:restaurant.description,latitude:restaurant.position.lat,longitude:restaurant.position.lng,phone:restaurant.phone,parking:restaurant.parking,businessHours:restaurant.hours,totalRatings:Math.floor(Math.random()*100)+10// 임시 데이터\n}));}};// 사용자 위치 가져오기\nconst getUserLocation=async()=>{setLoading(true);setError(null);if(!navigator.geolocation){setError('이 브라우저에서는 위치 정보를 지원하지 않습니다.');setLoading(false);return;}navigator.geolocation.getCurrentPosition(async position=>{try{const{latitude,longitude}=position.coords;setUserLocation({lat:latitude,lng:longitude});// Supabase에서 레스토랑 데이터 가져오기\nconst restaurants=await fetchRestaurants();// 가까운 식당 찾기 (위도/경도가 있는 경우만)\nconst restaurantsWithDistance=restaurants.filter(restaurant=>restaurant.latitude&&restaurant.longitude).map(restaurant=>{const distance=calculateDistance(latitude,longitude,restaurant.latitude,restaurant.longitude);return{...restaurant,distance:distance,position:{lat:restaurant.latitude,lng:restaurant.longitude},businessHours:restaurant.businessHours||\"11:00 - 22:00\"};});// 위도/경도가 없는 경우 기본 위치 데이터 추가\nconst restaurantsWithoutLocation=restaurants.filter(restaurant=>!restaurant.latitude||!restaurant.longitude).map(restaurant=>({...restaurant,distance:Math.random()*10+1,// 임시 거리 (1-11km)\nposition:restaurant.position||{lat:37.5665,lng:126.9780},// 기존 position 사용 또는 기본값\nbusinessHours:restaurant.businessHours||\"11:00 - 22:00\"}));const allRestaurants=[...restaurantsWithDistance,...restaurantsWithoutLocation];// 거리순으로 정렬 (가까운 순) - 3개만 추천\nconst sortedRestaurants=allRestaurants.sort((a,b)=>a.distance-b.distance).slice(0,3);// 상위 3개만 추천\nconsole.log('주변 맛집 추천:',sortedRestaurants);setNearbyRestaurants(sortedRestaurants);setLoading(false);}catch(error){console.error('레스토랑 정보 로딩 오류:',error);setError('레스토랑 정보를 불러오는데 실패했습니다.');setLoading(false);}},error=>{let errorMessage='위치 정보를 가져올 수 없습니다.';switch(error.code){case error.PERMISSION_DENIED:errorMessage='위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 정보 접근을 허용해주세요.';break;case error.POSITION_UNAVAILABLE:errorMessage='위치 정보를 사용할 수 없습니다.';break;case error.TIMEOUT:errorMessage='위치 정보 요청 시간이 초과되었습니다.';break;}setError(errorMessage);setLoading(false);},{enableHighAccuracy:true,timeout:10000,maximumAge:300000// 5분\n});};// 페이지 로드 시 자동으로 위치 가져오기\nuseEffect(()=>{getUserLocation();},[]);const renderStars=rating=>{const stars=[];for(let i=1;i<=5;i++){stars.push(/*#__PURE__*/_jsx(\"span\",{className:`star ${i<=rating?'filled':''}`,children:\"\\u2605\"},i));}return stars;};// 찜하기 버튼 클릭 핸들러 (토글 기능)\nconst handleFavorite=restaurant=>{if(isInFavorites(restaurant.id)){removeFromFavorites(restaurant.id);alert('찜 목록에서 제거되었습니다! 👋');}else{addToFavorites(restaurant);alert('찜 목록에 추가되었습니다! 🎉');}};// 상세보기 버튼 클릭 핸들러\nconst handleDetail=restaurant=>{setSelectedRestaurant(restaurant);setShowModal(true);};// 모달 닫기\nconst closeModal=()=>{setShowModal(false);setSelectedRestaurant(null);};// 길찾기 버튼 클릭 핸들러\nconst handleNavigate=restaurant=>{const{lat,lng}=restaurant.position;if(lat&&lng){window.open(`https://map.kakao.com/link/to/${restaurant.name},${lat},${lng}`,'_blank');}else{alert('위치 정보가 없어 길찾기를 할 수 없습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83D\\uDCCD \\uB0B4 \\uC8FC\\uBCC0 \\uB9DB\\uC9D1 \\uCD94\\uCC9C\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uD604\\uC7AC \\uC704\\uCE58\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uAC00\\uAE4C\\uC6B4 \\uB9DB\\uC9D1\\uC744 \\uCD94\\uCC9C\\uD574\\uB4DC\\uB9BD\\uB2C8\\uB2E4!\"}),loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC704\\uCE58\\uB97C \\uD655\\uC778\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u26A0\\uFE0F \",error]}),/*#__PURE__*/_jsx(\"button\",{className:\"location-btn\",onClick:getUserLocation,children:\"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"})]}),userLocation&&nearbyRestaurants.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"nearby-grid\",children:nearbyRestaurants.map((restaurant,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"nearby-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"nearby-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:restaurant.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"distance\",children:[restaurant.distance.toFixed(1),\"km\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"rating-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars\",children:renderStars(restaurant.rating)}),/*#__PURE__*/_jsx(\"div\",{className:\"rating-text\",children:restaurant.rating}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-ratings\",children:[\"(\",restaurant.totalRatings||0,\"\\uBA85)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"description\",children:restaurant.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-meta\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCCD \",restaurant.address]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDD52 \",restaurant.businessHours]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDCDE \",restaurant.phone]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD83D\\uDE97 \",restaurant.parking?'주차 가능':'주차 불가']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"nearby-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:`favorite-btn ${isInFavorites(restaurant.id)?'favorited':''}`,onClick:()=>handleFavorite(restaurant),children:isInFavorites(restaurant.id)?'❤️ 찜됨':'🤍 내 목록에 담기'}),/*#__PURE__*/_jsx(\"button\",{className:\"detail-btn\",onClick:()=>handleDetail(restaurant),children:\"\\uD83D\\uDCCB \\uC0C1\\uC138\\uBCF4\\uAE30\"})]})]},restaurant.id))}),showModal&&selectedRestaurant&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",onClick:closeModal,children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedRestaurant.name}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-close\",onClick:closeModal,children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"rating-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars\",children:renderStars(selectedRestaurant.rating)}),/*#__PURE__*/_jsx(\"div\",{className:\"rating-text\",children:selectedRestaurant.rating}),/*#__PURE__*/_jsxs(\"div\",{className:\"total-ratings\",children:[\"(\",selectedRestaurant.totalRatings||0,\"\\uBA85)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"distance-info\",children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCD \\uAC70\\uB9AC:\"}),\" \",selectedRestaurant.distance.toFixed(1),\"km\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCCD \\uC8FC\\uC18C:\"}),\" \",selectedRestaurant.address]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDD52 \\uC601\\uC5C5\\uC2DC\\uAC04:\"}),\" \",selectedRestaurant.businessHours]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDE \\uC804\\uD654\\uBC88\\uD638:\"}),\" \",selectedRestaurant.phone]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDE97 \\uC8FC\\uCC28:\"}),\" \",selectedRestaurant.parking?'주차 가능':'주차 불가']})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-description\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCDD \\uC18C\\uAC1C:\"})}),/*#__PURE__*/_jsx(\"p\",{children:selectedRestaurant.description})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:`modal-btn favorite-btn ${isInFavorites(selectedRestaurant.id)?'favorited':''}`,onClick:()=>handleFavorite(selectedRestaurant),children:isInFavorites(selectedRestaurant.id)?'❤️ 찜됨':'🤍 찜하기'}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-btn navigate-btn\",onClick:()=>handleNavigate(selectedRestaurant),children:\"\\uD83D\\uDDFA\\uFE0F \\uAE38\\uCC3E\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"modal-btn close-btn\",onClick:closeModal,children:\"\\uB2EB\\uAE30\"})]})]})})]});};export default LocationBasedRecommendation;","map":{"version":3,"names":["React","useState","useEffect","useFavorites","supabase","restaurantData","jsx","_jsx","jsxs","_jsxs","LocationBasedRecommendation","userLocation","setUserLocation","nearbyRestaurants","setNearbyRestaurants","loading","setLoading","error","setError","selectedRestaurant","setSelectedRestaurant","showModal","setShowModal","addToFavorites","removeFromFavorites","isInFavorites","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","fetchRestaurants","data","from","select","console","warn","map","restaurant","id","name","cuisine","category","rating","address","description","latitude","position","lat","longitude","lng","phone","parking","businessHours","hours","totalRatings","floor","random","length","log","getUserLocation","navigator","geolocation","getCurrentPosition","coords","restaurants","restaurantsWithDistance","filter","restaurantsWithoutLocation","allRestaurants","sortedRestaurants","sort","b","slice","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","renderStars","stars","i","push","className","children","handleFavorite","alert","handleDetail","closeModal","handleNavigate","window","open","onClick","index","toFixed","e","stopPropagation"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/components/LocationBasedRecommendation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { supabase } from '../services/supabase';\nimport { restaurantData } from '../data/restaurantData';\n\nconst LocationBasedRecommendation = () => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearbyRestaurants, setNearbyRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const { addToFavorites, removeFromFavorites, isInFavorites } = useFavorites();\n\n  // 두 지점 간의 거리 계산 (하버사인 공식)\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const distance = R * c; // km\n    return distance;\n  };\n\n  // Supabase에서 레스토랑 데이터 가져오기\n  const fetchRestaurants = async () => {\n    try {\n      // Supabase에서 레스토랑 데이터 가져오기\n      const { data, error } = await supabase\n        .from('restaurants')\n        .select('*');\n      \n      if (error) {\n        console.warn('Supabase 연결 실패, 기본 데이터 사용:', error);\n        // 기본 데이터 반환\n        return restaurantData.map(restaurant => ({\n          id: restaurant.id,\n          name: restaurant.name,\n          cuisine: restaurant.category,\n          rating: restaurant.rating,\n          address: restaurant.address,\n          description: restaurant.description,\n          latitude: restaurant.position.lat,\n          longitude: restaurant.position.lng,\n          phone: restaurant.phone,\n          parking: restaurant.parking,\n          businessHours: restaurant.hours,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      }\n      \n      // Supabase 데이터가 있으면 사용, 없으면 기본 데이터 사용\n      if (data && data.length > 0) {\n        console.log('Supabase 데이터 사용:', data.length, '개 레스토랑');\n        return data.map(restaurant => ({\n          ...restaurant,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      } else {\n        console.log('Supabase 데이터 없음, 기본 데이터 사용');\n        return restaurantData.map(restaurant => ({\n          id: restaurant.id,\n          name: restaurant.name,\n          cuisine: restaurant.category,\n          rating: restaurant.rating,\n          address: restaurant.address,\n          description: restaurant.description,\n          latitude: restaurant.position.lat,\n          longitude: restaurant.position.lng,\n          phone: restaurant.phone,\n          parking: restaurant.parking,\n          businessHours: restaurant.hours,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      }\n    } catch (error) {\n      console.warn('API 호출 실패, 기본 데이터 사용:', error);\n      return restaurantData.map(restaurant => ({\n        id: restaurant.id,\n        name: restaurant.name,\n        cuisine: restaurant.category,\n        rating: restaurant.rating,\n        address: restaurant.address,\n        description: restaurant.description,\n        latitude: restaurant.position.lat,\n        longitude: restaurant.position.lng,\n        phone: restaurant.phone,\n        parking: restaurant.parking,\n        businessHours: restaurant.hours,\n        totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n      }));\n    }\n  };\n\n  // 사용자 위치 가져오기\n  const getUserLocation = async () => {\n    setLoading(true);\n    setError(null);\n\n    if (!navigator.geolocation) {\n      setError('이 브라우저에서는 위치 정보를 지원하지 않습니다.');\n      setLoading(false);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        try {\n          const { latitude, longitude } = position.coords;\n          setUserLocation({ lat: latitude, lng: longitude });\n          \n          // Supabase에서 레스토랑 데이터 가져오기\n          const restaurants = await fetchRestaurants();\n          \n          // 가까운 식당 찾기 (위도/경도가 있는 경우만)\n          const restaurantsWithDistance = restaurants\n            .filter(restaurant => restaurant.latitude && restaurant.longitude)\n            .map(restaurant => {\n              const distance = calculateDistance(\n                latitude, \n                longitude, \n                restaurant.latitude, \n                restaurant.longitude\n              );\n              return {\n                ...restaurant,\n                distance: distance,\n                position: { lat: restaurant.latitude, lng: restaurant.longitude },\n                businessHours: restaurant.businessHours || \"11:00 - 22:00\",\n              };\n            });\n\n          // 위도/경도가 없는 경우 기본 위치 데이터 추가\n          const restaurantsWithoutLocation = restaurants\n            .filter(restaurant => !restaurant.latitude || !restaurant.longitude)\n            .map(restaurant => ({\n              ...restaurant,\n              distance: Math.random() * 10 + 1, // 임시 거리 (1-11km)\n              position: restaurant.position || { lat: 37.5665, lng: 126.9780 }, // 기존 position 사용 또는 기본값\n              businessHours: restaurant.businessHours || \"11:00 - 22:00\",\n            }));\n\n          const allRestaurants = [...restaurantsWithDistance, ...restaurantsWithoutLocation];\n\n          // 거리순으로 정렬 (가까운 순) - 3개만 추천\n          const sortedRestaurants = allRestaurants\n            .sort((a, b) => a.distance - b.distance)\n            .slice(0, 3); // 상위 3개만 추천\n\n          console.log('주변 맛집 추천:', sortedRestaurants);\n          setNearbyRestaurants(sortedRestaurants);\n          setLoading(false);\n        } catch (error) {\n          console.error('레스토랑 정보 로딩 오류:', error);\n          setError('레스토랑 정보를 불러오는데 실패했습니다.');\n          setLoading(false);\n        }\n      },\n      (error) => {\n        let errorMessage = '위치 정보를 가져올 수 없습니다.';\n        switch(error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage = '위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 정보 접근을 허용해주세요.';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            errorMessage = '위치 정보를 사용할 수 없습니다.';\n            break;\n          case error.TIMEOUT:\n            errorMessage = '위치 정보 요청 시간이 초과되었습니다.';\n            break;\n        }\n        setError(errorMessage);\n        setLoading(false);\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000 // 5분\n      }\n    );\n  };\n\n  // 페이지 로드 시 자동으로 위치 가져오기\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <span key={i} className={`star ${i <= rating ? 'filled' : ''}`}>\n          ★\n        </span>\n      );\n    }\n    return stars;\n  };\n\n  // 찜하기 버튼 클릭 핸들러 (토글 기능)\n  const handleFavorite = (restaurant) => {\n    if (isInFavorites(restaurant.id)) {\n      removeFromFavorites(restaurant.id);\n      alert('찜 목록에서 제거되었습니다! 👋');\n    } else {\n      addToFavorites(restaurant);\n      alert('찜 목록에 추가되었습니다! 🎉');\n    }\n  };\n\n  // 상세보기 버튼 클릭 핸들러\n  const handleDetail = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n    setShowModal(true);\n  };\n\n  // 모달 닫기\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedRestaurant(null);\n  };\n\n  // 길찾기 버튼 클릭 핸들러\n  const handleNavigate = (restaurant) => {\n    const { lat, lng } = restaurant.position;\n    if (lat && lng) {\n      window.open(`https://map.kakao.com/link/to/${restaurant.name},${lat},${lng}`, '_blank');\n    } else {\n      alert('위치 정보가 없어 길찾기를 할 수 없습니다.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>📍 내 주변 맛집 추천</h2>\n      <p>현재 위치를 기반으로 가까운 맛집을 추천해드립니다!</p>\n      \n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>위치를 확인하고 있습니다...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <p>⚠️ {error}</p>\n          <button \n            className=\"location-btn\"\n            onClick={getUserLocation}\n          >\n            다시 시도\n          </button>\n        </div>\n      )}\n\n      {userLocation && nearbyRestaurants.length > 0 && (\n        <div className=\"nearby-grid\">\n          {nearbyRestaurants.map((restaurant, index) => (\n            <div key={restaurant.id} className=\"nearby-card\">\n              <div className=\"nearby-header\">\n                <h4>{restaurant.name}</h4>\n                <div className=\"distance\">{restaurant.distance.toFixed(1)}km</div>\n              </div>\n              \n              <div className=\"rating-section\">\n                <div className=\"stars\">\n                  {renderStars(restaurant.rating)}\n                </div>\n                <div className=\"rating-text\">{restaurant.rating}</div>\n                <div className=\"total-ratings\">({restaurant.totalRatings || 0}명)</div>\n              </div>\n              \n              <div className=\"description\">{restaurant.description}</div>\n              \n              <div className=\"restaurant-meta\">\n                <p>📍 {restaurant.address}</p>\n                <p>🕒 {restaurant.businessHours}</p>\n                <p>📞 {restaurant.phone}</p>\n                <p>🚗 {restaurant.parking ? '주차 가능' : '주차 불가'}</p>\n              </div>\n              \n              <div className=\"nearby-actions\">\n                <button \n                  className={`favorite-btn ${isInFavorites(restaurant.id) ? 'favorited' : ''}`}\n                  onClick={() => handleFavorite(restaurant)}\n                >\n                  {isInFavorites(restaurant.id) ? '❤️ 찜됨' : '🤍 내 목록에 담기'}\n                </button>\n                <button \n                  className=\"detail-btn\"\n                  onClick={() => handleDetail(restaurant)}\n                >\n                  📋 상세보기\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* 상세보기 모달 */}\n      {showModal && selectedRestaurant && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{selectedRestaurant.name}</h2>\n              <button className=\"modal-close\" onClick={closeModal}>✕</button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"restaurant-info\">\n                <div className=\"rating-section\">\n                  <div className=\"stars\">\n                    {renderStars(selectedRestaurant.rating)}\n                  </div>\n                  <div className=\"rating-text\">{selectedRestaurant.rating}</div>\n                  <div className=\"total-ratings\">({selectedRestaurant.totalRatings || 0}명)</div>\n                </div>\n                \n                <div className=\"distance-info\">\n                  <p><strong>📍 거리:</strong> {selectedRestaurant.distance.toFixed(1)}km</p>\n                </div>\n                \n                <div className=\"restaurant-details\">\n                  <p><strong>📍 주소:</strong> {selectedRestaurant.address}</p>\n                  <p><strong>🕒 영업시간:</strong> {selectedRestaurant.businessHours}</p>\n                  <p><strong>📞 전화번호:</strong> {selectedRestaurant.phone}</p>\n                  <p><strong>🚗 주차:</strong> {selectedRestaurant.parking ? '주차 가능' : '주차 불가'}</p>\n                </div>\n                \n                <div className=\"restaurant-description\">\n                  <p><strong>📝 소개:</strong></p>\n                  <p>{selectedRestaurant.description}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"modal-actions\">\n              <button \n                className={`modal-btn favorite-btn ${isInFavorites(selectedRestaurant.id) ? 'favorited' : ''}`}\n                onClick={() => handleFavorite(selectedRestaurant)}\n              >\n                {isInFavorites(selectedRestaurant.id) ? '❤️ 찜됨' : '🤍 찜하기'}\n              </button>\n              <button \n                className=\"modal-btn navigate-btn\"\n                onClick={() => handleNavigate(selectedRestaurant)}\n              >\n                🗺️ 길찾기\n              </button>\n              <button \n                className=\"modal-btn close-btn\"\n                onClick={closeModal}\n              >\n                닫기\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationBasedRecommendation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}