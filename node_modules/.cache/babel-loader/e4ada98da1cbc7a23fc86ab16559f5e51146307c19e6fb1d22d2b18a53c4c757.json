{"ast":null,"code":"import { supabase } from './supabase';\n\n// 레스토랑 관련 API\nexport const restaurantAPI = {\n  // 모든 레스토랑 조회\n  getAll: async () => {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('restaurants').select('*');\n      if (error) {\n        console.warn('Supabase 연결 실패, 기본 데이터 사용:', error);\n        // 기본 데이터 반환\n        return {\n          data: [{\n            id: 1,\n            name: \"맛있는 한식집\",\n            cuisine: \"한식\",\n            rating: 4.5,\n            address: \"서울시 강남구 테헤란로 123\",\n            description: \"전통 한식 전문점입니다.\",\n            latitude: 37.5665,\n            longitude: 126.9780,\n            phone: \"02-1234-5678\",\n            parking: \"주차 가능\",\n            businessHours: \"11:00 - 22:00\"\n          }, {\n            id: 2,\n            name: \"신선한 일식집\",\n            cuisine: \"일식\",\n            rating: 4.3,\n            address: \"서울시 강남구 역삼동 456\",\n            description: \"신선한 회와 초밥 전문점입니다.\",\n            latitude: 37.5668,\n            longitude: 126.9785,\n            phone: \"02-2345-6789\",\n            parking: \"주차 불가\",\n            businessHours: \"11:30 - 22:30\"\n          }, {\n            id: 3,\n            name: \"맛있는 중식집\",\n            cuisine: \"중식\",\n            rating: 4.2,\n            address: \"서울시 강남구 삼성동 789\",\n            description: \"정통 중국 요리 전문점입니다.\",\n            latitude: 37.5670,\n            longitude: 126.9790,\n            phone: \"02-3456-7890\",\n            parking: \"주차 가능\",\n            businessHours: \"11:00 - 21:00\"\n          }]\n        };\n      }\n      return {\n        data: data || []\n      };\n    } catch (error) {\n      console.warn('API 호출 실패, 기본 데이터 사용:', error);\n      return {\n        data: [{\n          id: 1,\n          name: \"맛있는 한식집\",\n          cuisine: \"한식\",\n          rating: 4.5,\n          address: \"서울시 강남구 테헤란로 123\",\n          description: \"전통 한식 전문점입니다.\",\n          latitude: 37.5665,\n          longitude: 126.9780,\n          phone: \"02-1234-5678\",\n          parking: \"주차 가능\",\n          businessHours: \"11:00 - 22:00\"\n        }, {\n          id: 2,\n          name: \"신선한 일식집\",\n          cuisine: \"일식\",\n          rating: 4.3,\n          address: \"서울시 강남구 역삼동 456\",\n          description: \"신선한 회와 초밥 전문점입니다.\",\n          latitude: 37.5668,\n          longitude: 126.9785,\n          phone: \"02-2345-6789\",\n          parking: \"주차 불가\",\n          businessHours: \"11:30 - 22:30\"\n        }, {\n          id: 3,\n          name: \"맛있는 중식집\",\n          cuisine: \"중식\",\n          rating: 4.2,\n          address: \"서울시 강남구 삼성동 789\",\n          description: \"정통 중국 요리 전문점입니다.\",\n          latitude: 37.5670,\n          longitude: 126.9790,\n          phone: \"02-3456-7890\",\n          parking: \"주차 가능\",\n          businessHours: \"11:00 - 21:00\"\n        }]\n      };\n    }\n  },\n  // ID로 레스토랑 조회\n  getById: async id => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').eq('id', id).single();\n    if (error) throw error;\n    return {\n      data\n    };\n  },\n  // 새 레스토랑 추가\n  create: async restaurant => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').insert(restaurant).select().single();\n    if (error) throw error;\n    return {\n      data\n    };\n  },\n  // 레스토랑 정보 수정\n  update: async (id, restaurant) => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').update(restaurant).eq('id', id).select().single();\n    if (error) throw error;\n    return {\n      data\n    };\n  },\n  // 레스토랑 삭제\n  delete: async id => {\n    const {\n      error\n    } = await supabase.from('restaurants').delete().eq('id', id);\n    if (error) throw error;\n    return {\n      success: true\n    };\n  },\n  // 요리 타입으로 검색\n  getByCuisine: async cuisine => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').eq('cuisine', cuisine);\n    if (error) throw error;\n    return {\n      data\n    };\n  },\n  // 평점으로 검색\n  getByRating: async rating => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').gte('rating', rating);\n    if (error) throw error;\n    return {\n      data\n    };\n  },\n  // 키워드로 검색\n  search: async keyword => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').or(`name.ilike.%${keyword}%,description.ilike.%${keyword}%`);\n    if (error) throw error;\n    return {\n      data\n    };\n  },\n  // 근처 레스토랑 검색\n  getNearby: async (lat, lng, radius = 0.01) => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*').not('latitude', 'is', null).not('longitude', 'is', null);\n    if (error) throw error;\n\n    // 클라이언트에서 거리 계산\n    const nearby = data.filter(restaurant => {\n      const distance = Math.sqrt(Math.pow(restaurant.latitude - lat, 2) + Math.pow(restaurant.longitude - lng, 2));\n      return distance <= radius;\n    });\n    return {\n      data: nearby\n    };\n  },\n  // 랜덤 레스토랑 추천\n  getRandom: async () => {\n    const {\n      data,\n      error\n    } = await supabase.from('restaurants').select('*');\n    if (error) throw error;\n    if (data && data.length > 0) {\n      const randomIndex = Math.floor(Math.random() * data.length);\n      return {\n        data: data[randomIndex]\n      };\n    }\n    return {\n      data: null\n    };\n  }\n};\nexport default restaurantAPI;","map":{"version":3,"names":["supabase","restaurantAPI","getAll","data","error","from","select","console","warn","id","name","cuisine","rating","address","description","latitude","longitude","phone","parking","businessHours","getById","eq","single","create","restaurant","insert","update","delete","success","getByCuisine","getByRating","gte","search","keyword","or","getNearby","lat","lng","radius","not","nearby","filter","distance","Math","sqrt","pow","getRandom","length","randomIndex","floor","random"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/services/api.js"],"sourcesContent":["import { supabase } from './supabase';\n\n// 레스토랑 관련 API\nexport const restaurantAPI = {\n  // 모든 레스토랑 조회\n  getAll: async () => {\n    try {\n      const { data, error } = await supabase\n        .from('restaurants')\n        .select('*');\n      \n      if (error) {\n        console.warn('Supabase 연결 실패, 기본 데이터 사용:', error);\n        // 기본 데이터 반환\n        return { \n          data: [\n            {\n              id: 1,\n              name: \"맛있는 한식집\",\n              cuisine: \"한식\",\n              rating: 4.5,\n              address: \"서울시 강남구 테헤란로 123\",\n              description: \"전통 한식 전문점입니다.\",\n              latitude: 37.5665,\n              longitude: 126.9780,\n              phone: \"02-1234-5678\",\n              parking: \"주차 가능\",\n              businessHours: \"11:00 - 22:00\"\n            },\n            {\n              id: 2,\n              name: \"신선한 일식집\",\n              cuisine: \"일식\",\n              rating: 4.3,\n              address: \"서울시 강남구 역삼동 456\",\n              description: \"신선한 회와 초밥 전문점입니다.\",\n              latitude: 37.5668,\n              longitude: 126.9785,\n              phone: \"02-2345-6789\",\n              parking: \"주차 불가\",\n              businessHours: \"11:30 - 22:30\"\n            },\n            {\n              id: 3,\n              name: \"맛있는 중식집\",\n              cuisine: \"중식\",\n              rating: 4.2,\n              address: \"서울시 강남구 삼성동 789\",\n              description: \"정통 중국 요리 전문점입니다.\",\n              latitude: 37.5670,\n              longitude: 126.9790,\n              phone: \"02-3456-7890\",\n              parking: \"주차 가능\",\n              businessHours: \"11:00 - 21:00\"\n            }\n          ]\n        };\n      }\n      return { data: data || [] };\n    } catch (error) {\n      console.warn('API 호출 실패, 기본 데이터 사용:', error);\n      return { \n        data: [\n          {\n            id: 1,\n            name: \"맛있는 한식집\",\n            cuisine: \"한식\",\n            rating: 4.5,\n            address: \"서울시 강남구 테헤란로 123\",\n            description: \"전통 한식 전문점입니다.\",\n            latitude: 37.5665,\n            longitude: 126.9780,\n            phone: \"02-1234-5678\",\n            parking: \"주차 가능\",\n            businessHours: \"11:00 - 22:00\"\n          },\n          {\n            id: 2,\n            name: \"신선한 일식집\",\n            cuisine: \"일식\",\n            rating: 4.3,\n            address: \"서울시 강남구 역삼동 456\",\n            description: \"신선한 회와 초밥 전문점입니다.\",\n            latitude: 37.5668,\n            longitude: 126.9785,\n            phone: \"02-2345-6789\",\n            parking: \"주차 불가\",\n            businessHours: \"11:30 - 22:30\"\n          },\n          {\n            id: 3,\n            name: \"맛있는 중식집\",\n            cuisine: \"중식\",\n            rating: 4.2,\n            address: \"서울시 강남구 삼성동 789\",\n            description: \"정통 중국 요리 전문점입니다.\",\n            latitude: 37.5670,\n            longitude: 126.9790,\n            phone: \"02-3456-7890\",\n            parking: \"주차 가능\",\n            businessHours: \"11:00 - 21:00\"\n          }\n        ]\n      };\n    }\n  },\n  \n  // ID로 레스토랑 조회\n  getById: async (id) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .eq('id', id)\n      .single();\n    \n    if (error) throw error;\n    return { data };\n  },\n  \n  // 새 레스토랑 추가\n  create: async (restaurant) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .insert(restaurant)\n      .select()\n      .single();\n    \n    if (error) throw error;\n    return { data };\n  },\n  \n  // 레스토랑 정보 수정\n  update: async (id, restaurant) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .update(restaurant)\n      .eq('id', id)\n      .select()\n      .single();\n    \n    if (error) throw error;\n    return { data };\n  },\n  \n  // 레스토랑 삭제\n  delete: async (id) => {\n    const { error } = await supabase\n      .from('restaurants')\n      .delete()\n      .eq('id', id);\n    \n    if (error) throw error;\n    return { success: true };\n  },\n  \n  // 요리 타입으로 검색\n  getByCuisine: async (cuisine) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .eq('cuisine', cuisine);\n    \n    if (error) throw error;\n    return { data };\n  },\n  \n  // 평점으로 검색\n  getByRating: async (rating) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .gte('rating', rating);\n    \n    if (error) throw error;\n    return { data };\n  },\n  \n  // 키워드로 검색\n  search: async (keyword) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .or(`name.ilike.%${keyword}%,description.ilike.%${keyword}%`);\n    \n    if (error) throw error;\n    return { data };\n  },\n  \n  // 근처 레스토랑 검색\n  getNearby: async (lat, lng, radius = 0.01) => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*')\n      .not('latitude', 'is', null)\n      .not('longitude', 'is', null);\n    \n    if (error) throw error;\n    \n    // 클라이언트에서 거리 계산\n    const nearby = data.filter(restaurant => {\n      const distance = Math.sqrt(\n        Math.pow(restaurant.latitude - lat, 2) + \n        Math.pow(restaurant.longitude - lng, 2)\n      );\n      return distance <= radius;\n    });\n    \n    return { data: nearby };\n  },\n  \n  // 랜덤 레스토랑 추천\n  getRandom: async () => {\n    const { data, error } = await supabase\n      .from('restaurants')\n      .select('*');\n    \n    if (error) throw error;\n    \n    if (data && data.length > 0) {\n      const randomIndex = Math.floor(Math.random() * data.length);\n      return { data: data[randomIndex] };\n    }\n    \n    return { data: null };\n  },\n};\n\nexport default restaurantAPI; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}