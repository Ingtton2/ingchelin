{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8080/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// 레스토랑 관련 API\nexport const restaurantAPI={// 모든 레스토랑 조회\ngetAll:()=>api.get('/restaurants'),// ID로 레스토랑 조회\ngetById:id=>api.get(`/restaurants/${id}`),// 새 레스토랑 추가\ncreate:restaurant=>api.post('/restaurants',restaurant),// 레스토랑 정보 수정\nupdate:(id,restaurant)=>api.put(`/restaurants/${id}`,restaurant),// 레스토랑 삭제\ndelete:id=>api.delete(`/restaurants/${id}`),// 요리 타입으로 검색\ngetByCuisine:cuisine=>api.get(`/restaurants/cuisine/${cuisine}`),// 평점으로 검색\ngetByRating:rating=>api.get(`/restaurants/rating/${rating}`),// 키워드로 검색\nsearch:keyword=>api.get(`/restaurants/search?keyword=${keyword}`),// 근처 레스토랑 검색\ngetNearby:function(lat,lng){let radius=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.01;return api.get(`/restaurants/nearby?lat=${lat}&lng=${lng}&radius=${radius}`);},// 랜덤 레스토랑 추천\ngetRandom:()=>api.get('/restaurants/random')};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","restaurantAPI","getAll","get","getById","id","restaurant","post","update","put","delete","getByCuisine","cuisine","getByRating","rating","search","keyword","getNearby","lat","lng","radius","arguments","length","undefined","getRandom"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 레스토랑 관련 API\nexport const restaurantAPI = {\n  // 모든 레스토랑 조회\n  getAll: () => api.get('/restaurants'),\n  \n  // ID로 레스토랑 조회\n  getById: (id) => api.get(`/restaurants/${id}`),\n  \n  // 새 레스토랑 추가\n  create: (restaurant) => api.post('/restaurants', restaurant),\n  \n  // 레스토랑 정보 수정\n  update: (id, restaurant) => api.put(`/restaurants/${id}`, restaurant),\n  \n  // 레스토랑 삭제\n  delete: (id) => api.delete(`/restaurants/${id}`),\n  \n  // 요리 타입으로 검색\n  getByCuisine: (cuisine) => api.get(`/restaurants/cuisine/${cuisine}`),\n  \n  // 평점으로 검색\n  getByRating: (rating) => api.get(`/restaurants/rating/${rating}`),\n  \n  // 키워드로 검색\n  search: (keyword) => api.get(`/restaurants/search?keyword=${keyword}`),\n  \n  // 근처 레스토랑 검색\n  getNearby: (lat, lng, radius = 0.01) => \n    api.get(`/restaurants/nearby?lat=${lat}&lng=${lng}&radius=${radius}`),\n  \n  // 랜덤 레스토랑 추천\n  getRandom: () => api.get('/restaurants/random'),\n};\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAEhD,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,aAAa,CAAG,CAC3B;AACAC,MAAM,CAAEA,CAAA,GAAML,GAAG,CAACM,GAAG,CAAC,cAAc,CAAC,CAErC;AACAC,OAAO,CAAGC,EAAE,EAAKR,GAAG,CAACM,GAAG,CAAC,gBAAgBE,EAAE,EAAE,CAAC,CAE9C;AACAP,MAAM,CAAGQ,UAAU,EAAKT,GAAG,CAACU,IAAI,CAAC,cAAc,CAAED,UAAU,CAAC,CAE5D;AACAE,MAAM,CAAEA,CAACH,EAAE,CAAEC,UAAU,GAAKT,GAAG,CAACY,GAAG,CAAC,gBAAgBJ,EAAE,EAAE,CAAEC,UAAU,CAAC,CAErE;AACAI,MAAM,CAAGL,EAAE,EAAKR,GAAG,CAACa,MAAM,CAAC,gBAAgBL,EAAE,EAAE,CAAC,CAEhD;AACAM,YAAY,CAAGC,OAAO,EAAKf,GAAG,CAACM,GAAG,CAAC,wBAAwBS,OAAO,EAAE,CAAC,CAErE;AACAC,WAAW,CAAGC,MAAM,EAAKjB,GAAG,CAACM,GAAG,CAAC,uBAAuBW,MAAM,EAAE,CAAC,CAEjE;AACAC,MAAM,CAAGC,OAAO,EAAKnB,GAAG,CAACM,GAAG,CAAC,+BAA+Ba,OAAO,EAAE,CAAC,CAEtE;AACAC,SAAS,CAAE,QAAAA,CAACC,GAAG,CAAEC,GAAG,KAAE,CAAAC,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,OACjC,CAAAxB,GAAG,CAACM,GAAG,CAAC,2BAA2Be,GAAG,QAAQC,GAAG,WAAWC,MAAM,EAAE,CAAC,GAEvE;AACAI,SAAS,CAAEA,CAAA,GAAM3B,GAAG,CAACM,GAAG,CAAC,qBAAqB,CAChD,CAAC,CAED,cAAe,CAAAN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}