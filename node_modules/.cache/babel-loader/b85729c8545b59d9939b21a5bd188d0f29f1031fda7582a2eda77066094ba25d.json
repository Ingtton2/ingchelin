{"ast":null,"code":"var _jsxFileName = \"/Users/ingtto/Documents/GitHub/ingchelin/src/components/LocationBasedRecommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { supabase } from '../services/supabase';\nimport { restaurantData } from '../data/restaurantData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocationBasedRecommendation = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearbyRestaurants, setNearbyRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const {\n    addToFavorites,\n    removeFromFavorites,\n    isInFavorites\n  } = useFavorites();\n\n  // 두 지점 간의 거리 계산 (하버사인 공식)\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // km\n    return distance;\n  };\n\n  // Supabase에서 레스토랑 데이터 가져오기\n  const fetchRestaurants = async () => {\n    try {\n      // Supabase에서 레스토랑 데이터 가져오기\n      const {\n        data,\n        error\n      } = await supabase.from('restaurants').select('*');\n      if (error) {\n        console.warn('Supabase 연결 실패, 기본 데이터 사용:', error);\n        // 기본 데이터 반환\n        return restaurantData.map(restaurant => ({\n          id: restaurant.id,\n          name: restaurant.name,\n          cuisine: restaurant.category,\n          rating: restaurant.rating,\n          address: restaurant.address,\n          description: restaurant.description,\n          latitude: restaurant.position.lat,\n          longitude: restaurant.position.lng,\n          phone: restaurant.phone,\n          parking: restaurant.parking,\n          businessHours: restaurant.hours,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      }\n\n      // Supabase 데이터가 있으면 사용, 없으면 기본 데이터 사용\n      if (data && data.length > 0) {\n        console.log('Supabase 데이터 사용:', data.length, '개 레스토랑');\n        return data.map(restaurant => ({\n          ...restaurant,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      } else {\n        console.log('Supabase 데이터 없음, 기본 데이터 사용');\n        return restaurantData.map(restaurant => ({\n          id: restaurant.id,\n          name: restaurant.name,\n          cuisine: restaurant.category,\n          rating: restaurant.rating,\n          address: restaurant.address,\n          description: restaurant.description,\n          latitude: restaurant.position.lat,\n          longitude: restaurant.position.lng,\n          phone: restaurant.phone,\n          parking: restaurant.parking,\n          businessHours: restaurant.hours,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      }\n    } catch (error) {\n      console.warn('API 호출 실패, 기본 데이터 사용:', error);\n      return restaurantData.map(restaurant => ({\n        id: restaurant.id,\n        name: restaurant.name,\n        cuisine: restaurant.category,\n        rating: restaurant.rating,\n        address: restaurant.address,\n        description: restaurant.description,\n        latitude: restaurant.position.lat,\n        longitude: restaurant.position.lng,\n        phone: restaurant.phone,\n        parking: restaurant.parking,\n        businessHours: restaurant.hours,\n        totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n      }));\n    }\n  };\n\n  // 사용자 위치 가져오기\n  const getUserLocation = async () => {\n    setLoading(true);\n    setError(null);\n    if (!navigator.geolocation) {\n      setError('이 브라우저에서는 위치 정보를 지원하지 않습니다.');\n      setLoading(false);\n      return;\n    }\n    navigator.geolocation.getCurrentPosition(async position => {\n      try {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation({\n          lat: latitude,\n          lng: longitude\n        });\n\n        // Supabase에서 레스토랑 데이터 가져오기\n        const restaurants = await fetchRestaurants();\n\n        // 가까운 식당 찾기 (위도/경도가 있는 경우만)\n        const restaurantsWithDistance = restaurants.filter(restaurant => restaurant.latitude && restaurant.longitude).map(restaurant => {\n          const distance = calculateDistance(latitude, longitude, restaurant.latitude, restaurant.longitude);\n          return {\n            ...restaurant,\n            distance: distance,\n            position: {\n              lat: restaurant.latitude,\n              lng: restaurant.longitude\n            },\n            businessHours: restaurant.businessHours || \"11:00 - 22:00\"\n          };\n        });\n\n        // 위도/경도가 없는 경우 기본 위치 데이터 추가\n        const restaurantsWithoutLocation = restaurants.filter(restaurant => !restaurant.latitude || !restaurant.longitude).map(restaurant => ({\n          ...restaurant,\n          distance: Math.random() * 10 + 1,\n          // 임시 거리 (1-11km)\n          position: restaurant.position || {\n            lat: 37.5665,\n            lng: 126.9780\n          },\n          // 기존 position 사용 또는 기본값\n          businessHours: restaurant.businessHours || \"11:00 - 22:00\"\n        }));\n        const allRestaurants = [...restaurantsWithDistance, ...restaurantsWithoutLocation];\n\n        // 거리순으로 정렬 (가까운 순) - 3개만 추천\n        const sortedRestaurants = allRestaurants.sort((a, b) => a.distance - b.distance).slice(0, 3); // 상위 3개만 추천\n\n        console.log('주변 맛집 추천:', sortedRestaurants);\n        setNearbyRestaurants(sortedRestaurants);\n        setLoading(false);\n      } catch (error) {\n        console.error('레스토랑 정보 로딩 오류:', error);\n        setError('레스토랑 정보를 불러오는데 실패했습니다.');\n        setLoading(false);\n      }\n    }, error => {\n      let errorMessage = '위치 정보를 가져올 수 없습니다.';\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          errorMessage = '위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 정보 접근을 허용해주세요.';\n          break;\n        case error.POSITION_UNAVAILABLE:\n          errorMessage = '위치 정보를 사용할 수 없습니다.';\n          break;\n        case error.TIMEOUT:\n          errorMessage = '위치 정보 요청 시간이 초과되었습니다.';\n          break;\n      }\n      setError(errorMessage);\n      setLoading(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 10000,\n      maximumAge: 300000 // 5분\n    });\n  };\n\n  // 페이지 로드 시 자동으로 위치 가져오기\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `star ${i <= rating ? 'filled' : ''}`,\n        children: \"\\u2605\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this));\n    }\n    return stars;\n  };\n\n  // 찜하기 버튼 클릭 핸들러 (토글 기능)\n  const handleFavorite = restaurant => {\n    if (isInFavorites(restaurant.id)) {\n      removeFromFavorites(restaurant.id);\n      alert('찜 목록에서 제거되었습니다! 👋');\n    } else {\n      addToFavorites(restaurant);\n      alert('찜 목록에 추가되었습니다! 🎉');\n    }\n  };\n\n  // 상세보기 버튼 클릭 핸들러\n  const handleDetail = restaurant => {\n    setSelectedRestaurant(restaurant);\n    setShowModal(true);\n  };\n\n  // 모달 닫기\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedRestaurant(null);\n  };\n\n  // 길찾기 버튼 클릭 핸들러\n  const handleNavigate = restaurant => {\n    const {\n      lat,\n      lng\n    } = restaurant.position;\n    if (lat && lng) {\n      window.open(`https://map.kakao.com/link/to/${restaurant.name},${lat},${lng}`, '_blank');\n    } else {\n      alert('위치 정보가 없어 길찾기를 할 수 없습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCD \\uB0B4 \\uC8FC\\uBCC0 \\uB9DB\\uC9D1 \\uCD94\\uCC9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD604\\uC7AC \\uC704\\uCE58\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uAC00\\uAE4C\\uC6B4 \\uB9DB\\uC9D1\\uC744 \\uCD94\\uCC9C\\uD574\\uB4DC\\uB9BD\\uB2C8\\uB2E4!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC704\\uCE58\\uB97C \\uD655\\uC778\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u26A0\\uFE0F \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"location-btn\",\n        onClick: getUserLocation,\n        children: \"\\uB2E4\\uC2DC \\uC2DC\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), userLocation && nearbyRestaurants.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nearby-grid\",\n      children: nearbyRestaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nearby-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nearby-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: restaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"distance\",\n            children: [restaurant.distance.toFixed(1), \"km\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stars\",\n            children: renderStars(restaurant.rating)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-text\",\n            children: restaurant.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-ratings\",\n            children: [\"(\", restaurant.totalRatings || 0, \"\\uBA85)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"description\",\n          children: restaurant.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurant-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCCD \", restaurant.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDD52 \", restaurant.businessHours]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDCDE \", restaurant.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uD83D\\uDE97 \", restaurant.parking ? '주차 가능' : '주차 불가']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nearby-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `favorite-btn ${isInFavorites(restaurant.id) ? 'favorited' : ''}`,\n            onClick: () => handleFavorite(restaurant),\n            children: isInFavorites(restaurant.id) ? '❤️ 찜됨' : '🤍 내 목록에 담기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"detail-btn\",\n            onClick: () => handleDetail(restaurant),\n            children: \"\\uD83D\\uDCCB \\uC0C1\\uC138\\uBCF4\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)]\n      }, restaurant.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), showModal && selectedRestaurant && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedRestaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeModal,\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stars\",\n                children: renderStars(selectedRestaurant.rating)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rating-text\",\n                children: selectedRestaurant.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"total-ratings\",\n                children: [\"(\", selectedRestaurant.totalRatings || 0, \"\\uBA85)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"distance-info\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDCCD \\uAC70\\uB9AC:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 22\n                }, this), \" \", selectedRestaurant.distance.toFixed(1), \"km\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurant-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDCCD \\uC8FC\\uC18C:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 22\n                }, this), \" \", selectedRestaurant.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDD52 \\uC601\\uC5C5\\uC2DC\\uAC04:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 22\n                }, this), \" \", selectedRestaurant.businessHours]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDCDE \\uC804\\uD654\\uBC88\\uD638:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 22\n                }, this), \" \", selectedRestaurant.phone]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDE97 \\uC8FC\\uCC28:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 22\n                }, this), \" \", selectedRestaurant.parking ? '주차 가능' : '주차 불가']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurant-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\uD83D\\uDCDD \\uC18C\\uAC1C:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: selectedRestaurant.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `modal-btn favorite-btn ${isInFavorites(selectedRestaurant.id) ? 'favorited' : ''}`,\n            onClick: () => handleFavorite(selectedRestaurant),\n            children: isInFavorites(selectedRestaurant.id) ? '❤️ 찜됨' : '🤍 찜하기'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn navigate-btn\",\n            onClick: () => handleNavigate(selectedRestaurant),\n            children: \"\\uD83D\\uDDFA\\uFE0F \\uAE38\\uCC3E\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-btn close-btn\",\n            onClick: closeModal,\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(LocationBasedRecommendation, \"n5z2jR3JKR+Oq0RNcwCKv50l9Yk=\", false, function () {\n  return [useFavorites];\n});\n_c = LocationBasedRecommendation;\nexport default LocationBasedRecommendation;\nvar _c;\n$RefreshReg$(_c, \"LocationBasedRecommendation\");","map":{"version":3,"names":["React","useState","useEffect","useFavorites","supabase","restaurantData","jsxDEV","_jsxDEV","LocationBasedRecommendation","_s","userLocation","setUserLocation","nearbyRestaurants","setNearbyRestaurants","loading","setLoading","error","setError","selectedRestaurant","setSelectedRestaurant","showModal","setShowModal","addToFavorites","removeFromFavorites","isInFavorites","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","distance","fetchRestaurants","data","from","select","console","warn","map","restaurant","id","name","cuisine","category","rating","address","description","latitude","position","lat","longitude","lng","phone","parking","businessHours","hours","totalRatings","floor","random","length","log","getUserLocation","navigator","geolocation","getCurrentPosition","coords","restaurants","restaurantsWithDistance","filter","restaurantsWithoutLocation","allRestaurants","sortedRestaurants","sort","b","slice","errorMessage","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","enableHighAccuracy","timeout","maximumAge","renderStars","stars","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleFavorite","alert","handleDetail","closeModal","handleNavigate","window","open","onClick","index","toFixed","e","stopPropagation","_c","$RefreshReg$"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/components/LocationBasedRecommendation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { supabase } from '../services/supabase';\nimport { restaurantData } from '../data/restaurantData';\n\nconst LocationBasedRecommendation = () => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [nearbyRestaurants, setNearbyRestaurants] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const { addToFavorites, removeFromFavorites, isInFavorites } = useFavorites();\n\n  // 두 지점 간의 거리 계산 (하버사인 공식)\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    const distance = R * c; // km\n    return distance;\n  };\n\n  // Supabase에서 레스토랑 데이터 가져오기\n  const fetchRestaurants = async () => {\n    try {\n      // Supabase에서 레스토랑 데이터 가져오기\n      const { data, error } = await supabase\n        .from('restaurants')\n        .select('*');\n      \n      if (error) {\n        console.warn('Supabase 연결 실패, 기본 데이터 사용:', error);\n        // 기본 데이터 반환\n        return restaurantData.map(restaurant => ({\n          id: restaurant.id,\n          name: restaurant.name,\n          cuisine: restaurant.category,\n          rating: restaurant.rating,\n          address: restaurant.address,\n          description: restaurant.description,\n          latitude: restaurant.position.lat,\n          longitude: restaurant.position.lng,\n          phone: restaurant.phone,\n          parking: restaurant.parking,\n          businessHours: restaurant.hours,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      }\n      \n      // Supabase 데이터가 있으면 사용, 없으면 기본 데이터 사용\n      if (data && data.length > 0) {\n        console.log('Supabase 데이터 사용:', data.length, '개 레스토랑');\n        return data.map(restaurant => ({\n          ...restaurant,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      } else {\n        console.log('Supabase 데이터 없음, 기본 데이터 사용');\n        return restaurantData.map(restaurant => ({\n          id: restaurant.id,\n          name: restaurant.name,\n          cuisine: restaurant.category,\n          rating: restaurant.rating,\n          address: restaurant.address,\n          description: restaurant.description,\n          latitude: restaurant.position.lat,\n          longitude: restaurant.position.lng,\n          phone: restaurant.phone,\n          parking: restaurant.parking,\n          businessHours: restaurant.hours,\n          totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n        }));\n      }\n    } catch (error) {\n      console.warn('API 호출 실패, 기본 데이터 사용:', error);\n      return restaurantData.map(restaurant => ({\n        id: restaurant.id,\n        name: restaurant.name,\n        cuisine: restaurant.category,\n        rating: restaurant.rating,\n        address: restaurant.address,\n        description: restaurant.description,\n        latitude: restaurant.position.lat,\n        longitude: restaurant.position.lng,\n        phone: restaurant.phone,\n        parking: restaurant.parking,\n        businessHours: restaurant.hours,\n        totalRatings: Math.floor(Math.random() * 100) + 10 // 임시 데이터\n      }));\n    }\n  };\n\n  // 사용자 위치 가져오기\n  const getUserLocation = async () => {\n    setLoading(true);\n    setError(null);\n\n    if (!navigator.geolocation) {\n      setError('이 브라우저에서는 위치 정보를 지원하지 않습니다.');\n      setLoading(false);\n      return;\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      async (position) => {\n        try {\n          const { latitude, longitude } = position.coords;\n          setUserLocation({ lat: latitude, lng: longitude });\n          \n          // Supabase에서 레스토랑 데이터 가져오기\n          const restaurants = await fetchRestaurants();\n          \n          // 가까운 식당 찾기 (위도/경도가 있는 경우만)\n          const restaurantsWithDistance = restaurants\n            .filter(restaurant => restaurant.latitude && restaurant.longitude)\n            .map(restaurant => {\n              const distance = calculateDistance(\n                latitude, \n                longitude, \n                restaurant.latitude, \n                restaurant.longitude\n              );\n              return {\n                ...restaurant,\n                distance: distance,\n                position: { lat: restaurant.latitude, lng: restaurant.longitude },\n                businessHours: restaurant.businessHours || \"11:00 - 22:00\",\n              };\n            });\n\n          // 위도/경도가 없는 경우 기본 위치 데이터 추가\n          const restaurantsWithoutLocation = restaurants\n            .filter(restaurant => !restaurant.latitude || !restaurant.longitude)\n            .map(restaurant => ({\n              ...restaurant,\n              distance: Math.random() * 10 + 1, // 임시 거리 (1-11km)\n              position: restaurant.position || { lat: 37.5665, lng: 126.9780 }, // 기존 position 사용 또는 기본값\n              businessHours: restaurant.businessHours || \"11:00 - 22:00\",\n            }));\n\n          const allRestaurants = [...restaurantsWithDistance, ...restaurantsWithoutLocation];\n\n          // 거리순으로 정렬 (가까운 순) - 3개만 추천\n          const sortedRestaurants = allRestaurants\n            .sort((a, b) => a.distance - b.distance)\n            .slice(0, 3); // 상위 3개만 추천\n\n          console.log('주변 맛집 추천:', sortedRestaurants);\n          setNearbyRestaurants(sortedRestaurants);\n          setLoading(false);\n        } catch (error) {\n          console.error('레스토랑 정보 로딩 오류:', error);\n          setError('레스토랑 정보를 불러오는데 실패했습니다.');\n          setLoading(false);\n        }\n      },\n      (error) => {\n        let errorMessage = '위치 정보를 가져올 수 없습니다.';\n        switch(error.code) {\n          case error.PERMISSION_DENIED:\n            errorMessage = '위치 정보 접근이 거부되었습니다. 브라우저 설정에서 위치 정보 접근을 허용해주세요.';\n            break;\n          case error.POSITION_UNAVAILABLE:\n            errorMessage = '위치 정보를 사용할 수 없습니다.';\n            break;\n          case error.TIMEOUT:\n            errorMessage = '위치 정보 요청 시간이 초과되었습니다.';\n            break;\n        }\n        setError(errorMessage);\n        setLoading(false);\n      },\n      {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 300000 // 5분\n      }\n    );\n  };\n\n  // 페이지 로드 시 자동으로 위치 가져오기\n  useEffect(() => {\n    getUserLocation();\n  }, []);\n\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <span key={i} className={`star ${i <= rating ? 'filled' : ''}`}>\n          ★\n        </span>\n      );\n    }\n    return stars;\n  };\n\n  // 찜하기 버튼 클릭 핸들러 (토글 기능)\n  const handleFavorite = (restaurant) => {\n    if (isInFavorites(restaurant.id)) {\n      removeFromFavorites(restaurant.id);\n      alert('찜 목록에서 제거되었습니다! 👋');\n    } else {\n      addToFavorites(restaurant);\n      alert('찜 목록에 추가되었습니다! 🎉');\n    }\n  };\n\n  // 상세보기 버튼 클릭 핸들러\n  const handleDetail = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n    setShowModal(true);\n  };\n\n  // 모달 닫기\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedRestaurant(null);\n  };\n\n  // 길찾기 버튼 클릭 핸들러\n  const handleNavigate = (restaurant) => {\n    const { lat, lng } = restaurant.position;\n    if (lat && lng) {\n      window.open(`https://map.kakao.com/link/to/${restaurant.name},${lat},${lng}`, '_blank');\n    } else {\n      alert('위치 정보가 없어 길찾기를 할 수 없습니다.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>📍 내 주변 맛집 추천</h2>\n      <p>현재 위치를 기반으로 가까운 맛집을 추천해드립니다!</p>\n      \n      {loading && (\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>위치를 확인하고 있습니다...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <p>⚠️ {error}</p>\n          <button \n            className=\"location-btn\"\n            onClick={getUserLocation}\n          >\n            다시 시도\n          </button>\n        </div>\n      )}\n\n      {userLocation && nearbyRestaurants.length > 0 && (\n        <div className=\"nearby-grid\">\n          {nearbyRestaurants.map((restaurant, index) => (\n            <div key={restaurant.id} className=\"nearby-card\">\n              <div className=\"nearby-header\">\n                <h4>{restaurant.name}</h4>\n                <div className=\"distance\">{restaurant.distance.toFixed(1)}km</div>\n              </div>\n              \n              <div className=\"rating-section\">\n                <div className=\"stars\">\n                  {renderStars(restaurant.rating)}\n                </div>\n                <div className=\"rating-text\">{restaurant.rating}</div>\n                <div className=\"total-ratings\">({restaurant.totalRatings || 0}명)</div>\n              </div>\n              \n              <div className=\"description\">{restaurant.description}</div>\n              \n              <div className=\"restaurant-meta\">\n                <p>📍 {restaurant.address}</p>\n                <p>🕒 {restaurant.businessHours}</p>\n                <p>📞 {restaurant.phone}</p>\n                <p>🚗 {restaurant.parking ? '주차 가능' : '주차 불가'}</p>\n              </div>\n              \n              <div className=\"nearby-actions\">\n                <button \n                  className={`favorite-btn ${isInFavorites(restaurant.id) ? 'favorited' : ''}`}\n                  onClick={() => handleFavorite(restaurant)}\n                >\n                  {isInFavorites(restaurant.id) ? '❤️ 찜됨' : '🤍 내 목록에 담기'}\n                </button>\n                <button \n                  className=\"detail-btn\"\n                  onClick={() => handleDetail(restaurant)}\n                >\n                  📋 상세보기\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* 상세보기 모달 */}\n      {showModal && selectedRestaurant && (\n        <div className=\"modal-overlay\" onClick={closeModal}>\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{selectedRestaurant.name}</h2>\n              <button className=\"modal-close\" onClick={closeModal}>✕</button>\n            </div>\n            \n            <div className=\"modal-body\">\n              <div className=\"restaurant-info\">\n                <div className=\"rating-section\">\n                  <div className=\"stars\">\n                    {renderStars(selectedRestaurant.rating)}\n                  </div>\n                  <div className=\"rating-text\">{selectedRestaurant.rating}</div>\n                  <div className=\"total-ratings\">({selectedRestaurant.totalRatings || 0}명)</div>\n                </div>\n                \n                <div className=\"distance-info\">\n                  <p><strong>📍 거리:</strong> {selectedRestaurant.distance.toFixed(1)}km</p>\n                </div>\n                \n                <div className=\"restaurant-details\">\n                  <p><strong>📍 주소:</strong> {selectedRestaurant.address}</p>\n                  <p><strong>🕒 영업시간:</strong> {selectedRestaurant.businessHours}</p>\n                  <p><strong>📞 전화번호:</strong> {selectedRestaurant.phone}</p>\n                  <p><strong>🚗 주차:</strong> {selectedRestaurant.parking ? '주차 가능' : '주차 불가'}</p>\n                </div>\n                \n                <div className=\"restaurant-description\">\n                  <p><strong>📝 소개:</strong></p>\n                  <p>{selectedRestaurant.description}</p>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"modal-actions\">\n              <button \n                className={`modal-btn favorite-btn ${isInFavorites(selectedRestaurant.id) ? 'favorited' : ''}`}\n                onClick={() => handleFavorite(selectedRestaurant)}\n              >\n                {isInFavorites(selectedRestaurant.id) ? '❤️ 찜됨' : '🤍 찜하기'}\n              </button>\n              <button \n                className=\"modal-btn navigate-btn\"\n                onClick={() => handleNavigate(selectedRestaurant)}\n              >\n                🗺️ 길찾기\n              </button>\n              <button \n                className=\"modal-btn close-btn\"\n                onClick={closeModal}\n              >\n                닫기\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LocationBasedRecommendation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}