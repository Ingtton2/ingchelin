{"ast":null,"code":"const API_BASE_URL = 'http://localhost:8081/api';\nexport const kakaoMapService = {\n  // 식당 이름과 주소로 카카오맵에서 위치 검색\n  async searchRestaurantLocation(restaurantName, address) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/kakao/search?restaurantName=${encodeURIComponent(restaurantName)}&address=${encodeURIComponent(address)}`);\n      if (!response.ok) {\n        throw new Error('식당 위치 검색에 실패했습니다.');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('카카오맵 검색 오류:', error);\n      return null;\n    }\n  },\n  // 주소로 좌표 검색\n  async getCoordinatesFromAddress(address) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/kakao/coordinates?address=${encodeURIComponent(address)}`);\n      if (!response.ok) {\n        throw new Error('주소 좌표 검색에 실패했습니다.');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('주소 좌표 검색 오류:', error);\n      return null;\n    }\n  },\n  // 카카오맵 URL 생성\n  generateKakaoMapUrl(latitude, longitude, placeName) {\n    return `https://map.kakao.com/link/map/${placeName},${latitude},${longitude}`;\n  },\n  // 카카오맵 검색 URL 생성\n  generateKakaoSearchUrl(query) {\n    return `https://map.kakao.com/link/search/${encodeURIComponent(query)}`;\n  }\n};","map":{"version":3,"names":["API_BASE_URL","kakaoMapService","searchRestaurantLocation","restaurantName","address","response","fetch","encodeURIComponent","ok","Error","json","error","console","getCoordinatesFromAddress","generateKakaoMapUrl","latitude","longitude","placeName","generateKakaoSearchUrl","query"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/services/kakaoMapService.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8081/api';\n\nexport const kakaoMapService = {\n  // 식당 이름과 주소로 카카오맵에서 위치 검색\n  async searchRestaurantLocation(restaurantName, address) {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/kakao/search?restaurantName=${encodeURIComponent(restaurantName)}&address=${encodeURIComponent(address)}`\n      );\n      \n      if (!response.ok) {\n        throw new Error('식당 위치 검색에 실패했습니다.');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('카카오맵 검색 오류:', error);\n      return null;\n    }\n  },\n\n  // 주소로 좌표 검색\n  async getCoordinatesFromAddress(address) {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/kakao/coordinates?address=${encodeURIComponent(address)}`\n      );\n      \n      if (!response.ok) {\n        throw new Error('주소 좌표 검색에 실패했습니다.');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('주소 좌표 검색 오류:', error);\n      return null;\n    }\n  },\n\n  // 카카오맵 URL 생성\n  generateKakaoMapUrl(latitude, longitude, placeName) {\n    return `https://map.kakao.com/link/map/${placeName},${latitude},${longitude}`;\n  },\n\n  // 카카오맵 검색 URL 생성\n  generateKakaoSearchUrl(query) {\n    return `https://map.kakao.com/link/search/${encodeURIComponent(query)}`;\n  }\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,eAAe,GAAG;EAC7B;EACA,MAAMC,wBAAwBA,CAACC,cAAc,EAAEC,OAAO,EAAE;IACtD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGN,YAAY,gCAAgCO,kBAAkB,CAACJ,cAAc,CAAC,YAAYI,kBAAkB,CAACH,OAAO,CAAC,EAC1H,CAAC;MAED,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACtC;MAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,OAAO,IAAI;IACb;EACF,CAAC;EAED;EACA,MAAME,yBAAyBA,CAACT,OAAO,EAAE;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGN,YAAY,8BAA8BO,kBAAkB,CAACH,OAAO,CAAC,EAC1E,CAAC;MAED,IAAI,CAACC,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;MACtC;MAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,IAAI;IACb;EACF,CAAC;EAED;EACAG,mBAAmBA,CAACC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAE;IAClD,OAAO,kCAAkCA,SAAS,IAAIF,QAAQ,IAAIC,SAAS,EAAE;EAC/E,CAAC;EAED;EACAE,sBAAsBA,CAACC,KAAK,EAAE;IAC5B,OAAO,qCAAqCZ,kBAAkB,CAACY,KAAK,CAAC,EAAE;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}