{"ast":null,"code":"var _jsxFileName = \"/Users/ingtto/Documents/GitHub/ingchelin/src/pages/RandomRecommendation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { useVisit } from '../context/VisitContext';\nimport { restaurantAPI } from '../services/api';\nimport './RandomRecommendation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomRecommendation = () => {\n  _s();\n  const [currentRecommendation, setCurrentRecommendation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [restaurants, setRestaurants] = useState([]);\n  const [filters, setFilters] = useState({\n    category: 'all',\n    region: 'all',\n    maxDistance: 'all',\n    maxPrice: 'all',\n    mood: 'all'\n  });\n  const {\n    addToFavorites,\n    removeFromFavorites,\n    isInFavorites\n  } = useFavorites();\n  const {\n    getRestaurantVisitStatus\n  } = useVisit();\n  const categories = ['all', '한식', '중식', '일식', '양식', '분식', '태국', '술', '카페', '디저트'];\n\n  // 백엔드에서 레스토랑 데이터 가져오기\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await restaurantAPI.getAll();\n        const restaurantsWithExtraData = response.data.map(restaurant => ({\n          ...restaurant,\n          category: restaurant.cuisine,\n          // cuisine을 category로 매핑\n          price: \"2만원~5만원\",\n          // 임시 데이터\n          parking: \"주차 가능\",\n          // 임시 데이터\n          position: {\n            lat: restaurant.latitude,\n            lng: restaurant.longitude\n          }\n        }));\n        setRestaurants(restaurantsWithExtraData);\n      } catch (err) {\n        console.error('Failed to fetch restaurants:', err);\n      }\n    };\n    fetchRestaurants();\n  }, []);\n  const regionOptions = [{\n    value: 'all',\n    label: '전체 지역'\n  }, {\n    value: 'seoul',\n    label: '서울시'\n  }, {\n    value: 'bundang',\n    label: '성남시 분당구'\n  }];\n  const distanceOptions = [{\n    value: 'all',\n    label: '거리 무관'\n  }, {\n    value: '1',\n    label: '1km 이내'\n  }, {\n    value: '2',\n    label: '2km 이내'\n  }, {\n    value: '3',\n    label: '3km 이내'\n  }];\n  const priceOptions = [{\n    value: 'all',\n    label: '가격 무관'\n  }, {\n    value: '10000',\n    label: '1만원 이하'\n  }, {\n    value: '20000',\n    label: '2만원 이하'\n  }, {\n    value: '30000',\n    label: '3만원 이하'\n  }];\n  const moodOptions = [{\n    value: 'all',\n    label: '분위기 무관'\n  }, {\n    value: 'solo',\n    label: '혼밥 가능'\n  }, {\n    value: 'date',\n    label: '데이트 코스'\n  }, {\n    value: 'group',\n    label: '단체 모임'\n  }];\n\n  // 거리 계산 함수\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // km\n  };\n\n  // 가격 문자열에서 숫자 추출\n  const extractPrice = priceStr => {\n    const match = priceStr.match(/(\\d+)만원/);\n    return match ? parseInt(match[1]) * 10000 : 50000;\n  };\n\n  // 필터링된 레스토랑 목록 생성\n  const getFilteredRestaurants = () => {\n    let filtered = restaurants;\n\n    // 카테고리 필터\n    if (filters.category !== 'all') {\n      filtered = filtered.filter(restaurant => restaurant.category === filters.category);\n    }\n\n    // 지역 필터\n    if (filters.region !== 'all') {\n      if (filters.region === 'seoul') {\n        filtered = filtered.filter(restaurant => restaurant.address.includes('서울시'));\n      } else if (filters.region === 'bundang') {\n        filtered = filtered.filter(restaurant => restaurant.address.includes('성남시 분당구'));\n      }\n    }\n\n    // 가격 필터\n    if (filters.maxPrice !== 'all') {\n      const maxPrice = parseInt(filters.maxPrice);\n      filtered = filtered.filter(restaurant => {\n        const price = extractPrice(restaurant.price);\n        return price <= maxPrice;\n      });\n    }\n\n    // 분위기 필터 (간단한 구현)\n    if (filters.mood !== 'all') {\n      if (filters.mood === 'solo') {\n        filtered = filtered.filter(restaurant => restaurant.category !== '양식' || restaurant.price.includes('1만원'));\n      } else if (filters.mood === 'date') {\n        filtered = filtered.filter(restaurant => restaurant.category === '양식' || restaurant.category === '카페');\n      } else if (filters.mood === 'group') {\n        filtered = filtered.filter(restaurant => restaurant.parking.includes('가능'));\n      }\n    }\n    return filtered;\n  };\n\n  // 랜덤 추천 생성\n  const generateRandomRecommendation = async () => {\n    setIsLoading(true);\n    try {\n      // 백엔드에서 랜덤 레스토랑 가져오기\n      const response = await restaurantAPI.getRandom();\n      const randomRestaurant = response.data;\n\n      // 추가 데이터 매핑\n      const restaurantWithExtraData = {\n        ...randomRestaurant,\n        category: randomRestaurant.cuisine,\n        price: \"2만원~5만원\",\n        parking: \"주차 가능\",\n        position: {\n          lat: randomRestaurant.latitude,\n          lng: randomRestaurant.longitude\n        }\n      };\n      setCurrentRecommendation(restaurantWithExtraData);\n    } catch (err) {\n      console.error('Failed to get random restaurant:', err);\n      alert('랜덤 추천을 가져오는데 실패했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 필터 변경 핸들러\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n\n  // 좋아요 버튼 클릭 (토글 기능)\n  const handleLike = () => {\n    if (currentRecommendation) {\n      if (isInFavorites(currentRecommendation.id)) {\n        removeFromFavorites(currentRecommendation.id);\n        alert('찜 목록에서 제거되었습니다! 👋');\n      } else {\n        addToFavorites(currentRecommendation);\n        alert('찜 목록에 추가되었습니다! 🎉');\n      }\n    }\n  };\n\n  // 길찾기 버튼 클릭\n  const handleNavigate = () => {\n    if (currentRecommendation) {\n      const {\n        lat,\n        lng\n      } = currentRecommendation.position;\n      window.open(`https://map.kakao.com/link/to/${currentRecommendation.name},${lat},${lng}`, '_blank');\n    }\n  };\n\n  // 별점 렌더링\n  const renderStars = rating => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `star ${i <= rating ? 'filled' : ''}`,\n        children: \"\\u2605\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this));\n    }\n    return stars;\n  };\n\n  // 카테고리 아이콘\n  const getCategoryIcon = category => {\n    const icons = {\n      '한식': '🍚',\n      '양식': '🍝',\n      '일식': '🍣',\n      '중식': '🥢',\n      '카페': '☕',\n      '디저트': '🍰',\n      '분식': '🍡',\n      '술': '🍺',\n      '태국': '🍜'\n    };\n    return icons[category] || '🍽️';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"random-recommendation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD83C\\uDFB2 \\uC624\\uB298 \\uBB50 \\uBA39\\uC9C0?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC6B4\\uBA85\\uC758 \\uB9DB\\uC9D1\\uC744 \\uCC3E\\uC544\\uBCF4\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recommendation-content\",\n      children: [!currentRecommendation && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"start-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dice\",\n            children: \"\\uD83C\\uDFB2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"random-button\",\n            onClick: generateRandomRecommendation,\n            children: \"\\uB79C\\uB364 \\uCD94\\uCC9C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"filter-toggle-btn\",\n          onClick: () => setShowFilters(!showFilters),\n          children: showFilters ? '필터 숨기기' : '필터 설정'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD0D \\uD544\\uD130 \\uC124\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC74C\\uC2DD \\uC885\\uB958:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.category,\n            onChange: e => handleFilterChange('category', e.target.value),\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat === 'all' ? '전체' : cat\n            }, cat, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC9C0\\uC5ED:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.region,\n            onChange: e => handleFilterChange('region', e.target.value),\n            children: regionOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uAC00\\uACA9\\uB300:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.maxPrice,\n            onChange: e => handleFilterChange('maxPrice', e.target.value),\n            children: priceOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uBD84\\uC704\\uAE30:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.mood,\n            onChange: e => handleFilterChange('mood', e.target.value),\n            children: moodOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-animation\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-dice\",\n            children: \"\\uD83C\\uDFB2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-text\",\n            children: \"\\uC6B4\\uBA85\\uC758 \\uB9DB\\uC9D1\\uC744 \\uCC3E\\uB294 \\uC911...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-countdown\",\n            children: \"3... 2... 1...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), currentRecommendation && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recommendation-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uD83C\\uDF5C \\uC624\\uB298\\uC758 \\uCD94\\uCC9C!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurant-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentRecommendation.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-badge\",\n              children: [getCategoryIcon(currentRecommendation.category), \" \", currentRecommendation.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-rating\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stars\",\n              children: renderStars(currentRecommendation.rating)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"rating-text\",\n              children: currentRecommendation.rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address\",\n              children: [\"\\uD83D\\uDCCD \", currentRecommendation.address]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: [\"\\uD83D\\uDCB0 \", currentRecommendation.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hours\",\n              children: [\"\\uD83D\\uDD52 \", currentRecommendation.hours]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"phone\",\n              children: [\"\\uD83D\\uDCDE \", currentRecommendation.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"parking\",\n              children: [\"\\uD83D\\uDE97 \", currentRecommendation.parking]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-description\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentRecommendation.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn dislike-btn\",\n              onClick: generateRandomRecommendation,\n              children: \"\\uD83D\\uDD04 \\uB2E4\\uB978\\uAC78\\uB85C!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-btn like-btn ${isInFavorites(currentRecommendation.id) ? 'favorited' : ''}`,\n              onClick: handleLike,\n              children: isInFavorites(currentRecommendation.id) ? '❤️ 찜됨' : '🤍 좋아요!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn navigate-btn\",\n              onClick: handleNavigate,\n              children: \"\\uD83D\\uDDFA\\uFE0F \\uAE38\\uCC3E\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(RandomRecommendation, \"LR4baPb4eN7tg5Ru5azdD09Rj8M=\", false, function () {\n  return [useFavorites, useVisit];\n});\n_c = RandomRecommendation;\nexport default RandomRecommendation;\nvar _c;\n$RefreshReg$(_c, \"RandomRecommendation\");","map":{"version":3,"names":["React","useState","useEffect","useFavorites","useVisit","restaurantAPI","jsxDEV","_jsxDEV","RandomRecommendation","_s","currentRecommendation","setCurrentRecommendation","isLoading","setIsLoading","showFilters","setShowFilters","restaurants","setRestaurants","filters","setFilters","category","region","maxDistance","maxPrice","mood","addToFavorites","removeFromFavorites","isInFavorites","getRestaurantVisitStatus","categories","fetchRestaurants","response","getAll","restaurantsWithExtraData","data","map","restaurant","cuisine","price","parking","position","lat","latitude","lng","longitude","err","console","error","regionOptions","value","label","distanceOptions","priceOptions","moodOptions","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","extractPrice","priceStr","match","parseInt","getFilteredRestaurants","filtered","filter","address","includes","generateRandomRecommendation","getRandom","randomRestaurant","restaurantWithExtraData","alert","handleFilterChange","filterType","prev","handleLike","id","handleNavigate","window","open","name","renderStars","rating","stars","i","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getCategoryIcon","icons","onClick","onChange","e","target","cat","option","hours","phone","description","_c","$RefreshReg$"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/pages/RandomRecommendation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { useVisit } from '../context/VisitContext';\nimport { restaurantAPI } from '../services/api';\nimport './RandomRecommendation.css';\n\nconst RandomRecommendation = () => {\n  const [currentRecommendation, setCurrentRecommendation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [restaurants, setRestaurants] = useState([]);\n  const [filters, setFilters] = useState({\n    category: 'all',\n    region: 'all',\n    maxDistance: 'all',\n    maxPrice: 'all',\n    mood: 'all'\n  });\n  const { addToFavorites, removeFromFavorites, isInFavorites } = useFavorites();\n  const { getRestaurantVisitStatus } = useVisit();\n\n  const categories = ['all', '한식', '중식', '일식', '양식', '분식', '태국', '술', '카페', '디저트'];\n\n  // 백엔드에서 레스토랑 데이터 가져오기\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await restaurantAPI.getAll();\n        const restaurantsWithExtraData = response.data.map(restaurant => ({\n          ...restaurant,\n          category: restaurant.cuisine, // cuisine을 category로 매핑\n          price: \"2만원~5만원\", // 임시 데이터\n          parking: \"주차 가능\", // 임시 데이터\n          position: { lat: restaurant.latitude, lng: restaurant.longitude }\n        }));\n        setRestaurants(restaurantsWithExtraData);\n      } catch (err) {\n        console.error('Failed to fetch restaurants:', err);\n      }\n    };\n\n    fetchRestaurants();\n  }, []);\n\n  const regionOptions = [\n    { value: 'all', label: '전체 지역' },\n    { value: 'seoul', label: '서울시' },\n    { value: 'bundang', label: '성남시 분당구' }\n  ];\n  const distanceOptions = [\n    { value: 'all', label: '거리 무관' },\n    { value: '1', label: '1km 이내' },\n    { value: '2', label: '2km 이내' },\n    { value: '3', label: '3km 이내' }\n  ];\n  const priceOptions = [\n    { value: 'all', label: '가격 무관' },\n    { value: '10000', label: '1만원 이하' },\n    { value: '20000', label: '2만원 이하' },\n    { value: '30000', label: '3만원 이하' }\n  ];\n  const moodOptions = [\n    { value: 'all', label: '분위기 무관' },\n    { value: 'solo', label: '혼밥 가능' },\n    { value: 'date', label: '데이트 코스' },\n    { value: 'group', label: '단체 모임' }\n  ];\n\n  // 거리 계산 함수\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c; // km\n  };\n\n  // 가격 문자열에서 숫자 추출\n  const extractPrice = (priceStr) => {\n    const match = priceStr.match(/(\\d+)만원/);\n    return match ? parseInt(match[1]) * 10000 : 50000;\n  };\n\n  // 필터링된 레스토랑 목록 생성\n  const getFilteredRestaurants = () => {\n    let filtered = restaurants;\n\n    // 카테고리 필터\n    if (filters.category !== 'all') {\n      filtered = filtered.filter(restaurant => restaurant.category === filters.category);\n    }\n\n    // 지역 필터\n    if (filters.region !== 'all') {\n      if (filters.region === 'seoul') {\n        filtered = filtered.filter(restaurant => \n          restaurant.address.includes('서울시')\n        );\n      } else if (filters.region === 'bundang') {\n        filtered = filtered.filter(restaurant => \n          restaurant.address.includes('성남시 분당구')\n        );\n      }\n    }\n\n    // 가격 필터\n    if (filters.maxPrice !== 'all') {\n      const maxPrice = parseInt(filters.maxPrice);\n      filtered = filtered.filter(restaurant => {\n        const price = extractPrice(restaurant.price);\n        return price <= maxPrice;\n      });\n    }\n\n    // 분위기 필터 (간단한 구현)\n    if (filters.mood !== 'all') {\n      if (filters.mood === 'solo') {\n        filtered = filtered.filter(restaurant => \n          restaurant.category !== '양식' || restaurant.price.includes('1만원')\n        );\n      } else if (filters.mood === 'date') {\n        filtered = filtered.filter(restaurant => \n          restaurant.category === '양식' || restaurant.category === '카페'\n        );\n      } else if (filters.mood === 'group') {\n        filtered = filtered.filter(restaurant => \n          restaurant.parking.includes('가능')\n        );\n      }\n    }\n\n    return filtered;\n  };\n\n  // 랜덤 추천 생성\n  const generateRandomRecommendation = async () => {\n    setIsLoading(true);\n    \n    try {\n      // 백엔드에서 랜덤 레스토랑 가져오기\n      const response = await restaurantAPI.getRandom();\n      const randomRestaurant = response.data;\n      \n      // 추가 데이터 매핑\n      const restaurantWithExtraData = {\n        ...randomRestaurant,\n        category: randomRestaurant.cuisine,\n        price: \"2만원~5만원\",\n        parking: \"주차 가능\",\n        position: { lat: randomRestaurant.latitude, lng: randomRestaurant.longitude }\n      };\n      \n      setCurrentRecommendation(restaurantWithExtraData);\n    } catch (err) {\n      console.error('Failed to get random restaurant:', err);\n      alert('랜덤 추천을 가져오는데 실패했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 필터 변경 핸들러\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n\n  // 좋아요 버튼 클릭 (토글 기능)\n  const handleLike = () => {\n    if (currentRecommendation) {\n      if (isInFavorites(currentRecommendation.id)) {\n        removeFromFavorites(currentRecommendation.id);\n        alert('찜 목록에서 제거되었습니다! 👋');\n      } else {\n        addToFavorites(currentRecommendation);\n        alert('찜 목록에 추가되었습니다! 🎉');\n      }\n    }\n  };\n\n  // 길찾기 버튼 클릭\n  const handleNavigate = () => {\n    if (currentRecommendation) {\n      const { lat, lng } = currentRecommendation.position;\n      window.open(`https://map.kakao.com/link/to/${currentRecommendation.name},${lat},${lng}`, '_blank');\n    }\n  };\n\n  // 별점 렌더링\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <span key={i} className={`star ${i <= rating ? 'filled' : ''}`}>\n          ★\n        </span>\n      );\n    }\n    return stars;\n  };\n\n  // 카테고리 아이콘\n  const getCategoryIcon = (category) => {\n    const icons = {\n      '한식': '🍚',\n      '양식': '🍝',\n      '일식': '🍣',\n      '중식': '🥢',\n      '카페': '☕',\n      '디저트': '🍰',\n      '분식': '🍡',\n      '술': '🍺',\n      '태국': '🍜'\n    };\n    return icons[category] || '🍽️';\n  };\n\n  return (\n    <div className=\"random-recommendation-container\">\n      <div className=\"recommendation-header\">\n        <h1>🎲 오늘 뭐 먹지?</h1>\n        <p>운명의 맛집을 찾아보세요!</p>\n      </div>\n\n      <div className=\"recommendation-content\">\n        {!currentRecommendation && !isLoading && (\n          <div className=\"start-section\">\n            <div className=\"dice-container\">\n              <div className=\"dice\">🎲</div>\n              <button \n                className=\"random-button\"\n                onClick={generateRandomRecommendation}\n              >\n                랜덤 추천!\n              </button>\n            </div>\n            \n            <button \n              className=\"filter-toggle-btn\"\n              onClick={() => setShowFilters(!showFilters)}\n            >\n              {showFilters ? '필터 숨기기' : '필터 설정'}\n            </button>\n          </div>\n        )}\n\n        {showFilters && (\n          <div className=\"filters-section\">\n            <h3>🔍 필터 설정</h3>\n            \n            <div className=\"filter-group\">\n              <label>음식 종류:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                {categories.map(cat => (\n                  <option key={cat} value={cat}>\n                    {cat === 'all' ? '전체' : cat}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label>지역:</label>\n              <select \n                value={filters.region} \n                onChange={(e) => handleFilterChange('region', e.target.value)}\n              >\n                {regionOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label>가격대:</label>\n              <select \n                value={filters.maxPrice} \n                onChange={(e) => handleFilterChange('maxPrice', e.target.value)}\n              >\n                {priceOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label>분위기:</label>\n              <select \n                value={filters.mood} \n                onChange={(e) => handleFilterChange('mood', e.target.value)}\n              >\n                {moodOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        )}\n\n        {isLoading && (\n          <div className=\"loading-section\">\n            <div className=\"loading-animation\">\n              <div className=\"loading-dice\">🎲</div>\n              <div className=\"loading-text\">운명의 맛집을 찾는 중...</div>\n              <div className=\"loading-countdown\">3... 2... 1...</div>\n            </div>\n          </div>\n        )}\n\n        {currentRecommendation && !isLoading && (\n          <div className=\"recommendation-result\">\n            <div className=\"result-header\">\n              <h2>🍜 오늘의 추천!</h2>\n            </div>\n            \n            <div className=\"restaurant-card\">\n              <div className=\"restaurant-header\">\n                <h3>{currentRecommendation.name}</h3>\n                <span className=\"category-badge\">\n                  {getCategoryIcon(currentRecommendation.category)} {currentRecommendation.category}\n                </span>\n              </div>\n              \n              <div className=\"restaurant-rating\">\n                <div className=\"stars\">\n                  {renderStars(currentRecommendation.rating)}\n                </div>\n                <span className=\"rating-text\">{currentRecommendation.rating}</span>\n              </div>\n              \n              <div className=\"restaurant-info\">\n                <p className=\"address\">📍 {currentRecommendation.address}</p>\n                <p className=\"price\">💰 {currentRecommendation.price}</p>\n                <p className=\"hours\">🕒 {currentRecommendation.hours}</p>\n                <p className=\"phone\">📞 {currentRecommendation.phone}</p>\n                <p className=\"parking\">🚗 {currentRecommendation.parking}</p>\n              </div>\n              \n              <div className=\"restaurant-description\">\n                <p>{currentRecommendation.description}</p>\n              </div>\n              \n              <div className=\"action-buttons\">\n                <button \n                  className=\"action-btn dislike-btn\"\n                  onClick={generateRandomRecommendation}\n                >\n                  🔄 다른걸로!\n                </button>\n                <button \n                  className={`action-btn like-btn ${isInFavorites(currentRecommendation.id) ? 'favorited' : ''}`}\n                  onClick={handleLike}\n                >\n                  {isInFavorites(currentRecommendation.id) ? '❤️ 찜됨' : '🤍 좋아요!'}\n                </button>\n                <button \n                  className=\"action-btn navigate-btn\"\n                  onClick={handleNavigate}\n                >\n                  🗺️ 길찾기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RandomRecommendation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}