{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8081/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 레스토랑 관련 API\nexport const restaurantAPI = {\n  // 모든 레스토랑 조회\n  getAll: () => api.get('/restaurants'),\n  // ID로 레스토랑 조회\n  getById: id => api.get(`/restaurants/${id}`),\n  // 새 레스토랑 추가\n  create: restaurant => api.post('/restaurants', restaurant),\n  // 레스토랑 정보 수정\n  update: (id, restaurant) => api.put(`/restaurants/${id}`, restaurant),\n  // 레스토랑 삭제\n  delete: id => api.delete(`/restaurants/${id}`),\n  // 요리 타입으로 검색\n  getByCuisine: cuisine => api.get(`/restaurants/cuisine/${cuisine}`),\n  // 평점으로 검색\n  getByRating: rating => api.get(`/restaurants/rating/${rating}`),\n  // 키워드로 검색\n  search: keyword => api.get(`/restaurants/search?keyword=${keyword}`),\n  // 근처 레스토랑 검색\n  getNearby: (lat, lng, radius = 0.01) => api.get(`/restaurants/nearby?lat=${lat}&lng=${lng}&radius=${radius}`),\n  // 랜덤 레스토랑 추천\n  getRandom: () => api.get('/restaurants/random')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","restaurantAPI","getAll","get","getById","id","restaurant","post","update","put","delete","getByCuisine","cuisine","getByRating","rating","search","keyword","getNearby","lat","lng","radius","getRandom"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8081/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 레스토랑 관련 API\nexport const restaurantAPI = {\n  // 모든 레스토랑 조회\n  getAll: () => api.get('/restaurants'),\n  \n  // ID로 레스토랑 조회\n  getById: (id) => api.get(`/restaurants/${id}`),\n  \n  // 새 레스토랑 추가\n  create: (restaurant) => api.post('/restaurants', restaurant),\n  \n  // 레스토랑 정보 수정\n  update: (id, restaurant) => api.put(`/restaurants/${id}`, restaurant),\n  \n  // 레스토랑 삭제\n  delete: (id) => api.delete(`/restaurants/${id}`),\n  \n  // 요리 타입으로 검색\n  getByCuisine: (cuisine) => api.get(`/restaurants/cuisine/${cuisine}`),\n  \n  // 평점으로 검색\n  getByRating: (rating) => api.get(`/restaurants/rating/${rating}`),\n  \n  // 키워드로 검색\n  search: (keyword) => api.get(`/restaurants/search?keyword=${keyword}`),\n  \n  // 근처 레스토랑 검색\n  getNearby: (lat, lng, radius = 0.01) => \n    api.get(`/restaurants/nearby?lat=${lat}&lng=${lng}&radius=${radius}`),\n  \n  // 랜덤 레스토랑 추천\n  getRandom: () => api.get('/restaurants/random'),\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,aAAa,GAAG;EAC3B;EACAC,MAAM,EAAEA,CAAA,KAAML,GAAG,CAACM,GAAG,CAAC,cAAc,CAAC;EAErC;EACAC,OAAO,EAAGC,EAAE,IAAKR,GAAG,CAACM,GAAG,CAAC,gBAAgBE,EAAE,EAAE,CAAC;EAE9C;EACAP,MAAM,EAAGQ,UAAU,IAAKT,GAAG,CAACU,IAAI,CAAC,cAAc,EAAED,UAAU,CAAC;EAE5D;EACAE,MAAM,EAAEA,CAACH,EAAE,EAAEC,UAAU,KAAKT,GAAG,CAACY,GAAG,CAAC,gBAAgBJ,EAAE,EAAE,EAAEC,UAAU,CAAC;EAErE;EACAI,MAAM,EAAGL,EAAE,IAAKR,GAAG,CAACa,MAAM,CAAC,gBAAgBL,EAAE,EAAE,CAAC;EAEhD;EACAM,YAAY,EAAGC,OAAO,IAAKf,GAAG,CAACM,GAAG,CAAC,wBAAwBS,OAAO,EAAE,CAAC;EAErE;EACAC,WAAW,EAAGC,MAAM,IAAKjB,GAAG,CAACM,GAAG,CAAC,uBAAuBW,MAAM,EAAE,CAAC;EAEjE;EACAC,MAAM,EAAGC,OAAO,IAAKnB,GAAG,CAACM,GAAG,CAAC,+BAA+Ba,OAAO,EAAE,CAAC;EAEtE;EACAC,SAAS,EAAEA,CAACC,GAAG,EAAEC,GAAG,EAAEC,MAAM,GAAG,IAAI,KACjCvB,GAAG,CAACM,GAAG,CAAC,2BAA2Be,GAAG,QAAQC,GAAG,WAAWC,MAAM,EAAE,CAAC;EAEvE;EACAC,SAAS,EAAEA,CAAA,KAAMxB,GAAG,CAACM,GAAG,CAAC,qBAAqB;AAChD,CAAC;AAED,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}