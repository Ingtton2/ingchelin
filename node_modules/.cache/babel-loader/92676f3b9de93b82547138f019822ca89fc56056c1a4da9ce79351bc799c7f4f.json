{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useFavorites}from'../context/FavoriteContext';import{useVisit}from'../context/VisitContext';import{restaurantAPI}from'../services/api';import'./RandomRecommendation.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RandomRecommendation=()=>{const[currentRecommendation,setCurrentRecommendation]=useState(null);const[isLoading,setIsLoading]=useState(false);const[showFilters,setShowFilters]=useState(false);const[restaurants,setRestaurants]=useState([]);const[filterOptions,setFilterOptions]=useState({categories:['all'],regions:['all'],priceRanges:['all']});const[filters,setFilters]=useState({category:'all',region:'all',maxDistance:'all',mood:'all'});const[userLocation,setUserLocation]=useState(null);const[locationError,setLocationError]=useState(null);const{addToFavorites,removeFromFavorites,isInFavorites}=useFavorites();const{getRestaurantVisitStatus}=useVisit();// 사용자 위치 가져오기\nconst getUserLocation=()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{setUserLocation({lat:position.coords.latitude,lng:position.coords.longitude});setLocationError(null);},error=>{console.error('위치 정보를 가져올 수 없습니다:',error);setLocationError('위치 정보를 가져올 수 없습니다. 거리 필터가 비활성화됩니다.');});}else{setLocationError('이 브라우저는 위치 정보를 지원하지 않습니다.');}};// 백엔드에서 레스토랑 데이터 가져오기\nuseEffect(()=>{const fetchRestaurants=async()=>{try{const response=await restaurantAPI.getAll();const restaurantsWithExtraData=response.data.map(restaurant=>({...restaurant,category:restaurant.cuisine,// cuisine을 category로 매핑\nprice:\"2만원~5만원\",// 임시 데이터\nparking:\"주차 가능\",// 임시 데이터\nposition:{lat:restaurant.latitude,lng:restaurant.longitude}}));setRestaurants(restaurantsWithExtraData);// 필터 옵션 동적 생성\ngenerateFilterOptions(restaurantsWithExtraData);}catch(err){console.error('Failed to fetch restaurants:',err);}};fetchRestaurants();getUserLocation();// 사용자 위치 가져오기\n},[]);// 데이터베이스에서 필터 옵션 동적 생성\nconst generateFilterOptions=restaurants=>{if(!restaurants.length)return;// 카테고리 옵션 생성\nconst categories=['all',...new Set(restaurants.map(r=>r.cuisine))];// 지역 옵션 생성 (시/구 단위로 그룹화)\nconst regions=['all'];const regionMap={};restaurants.forEach(restaurant=>{const addressParts=restaurant.address.split(' ');if(addressParts.length>=2){const region=`${addressParts[0]} ${addressParts[1]}`;if(!regionMap[region]){regionMap[region]=0;regions.push(region);}regionMap[region]++;}});// 거리 옵션\nconst distanceOptions=[{value:'all',label:'거리 무관'},{value:'1',label:'1km 이내'},{value:'2',label:'2km 이내'},{value:'3',label:'3km 이내'},{value:'5',label:'5km 이내'}];// 분위기 옵션\nconst moodOptions=[{value:'all',label:'분위기 무관'},{value:'solo',label:'혼밥 가능'},{value:'date',label:'데이트 코스'},{value:'group',label:'단체 모임'},{value:'family',label:'가족 모임'}];setFilterOptions({categories,regions,distanceOptions,moodOptions});};// 거리 계산 함수\nconst calculateDistance=(lat1,lon1,lat2,lon2)=>{const R=6371;// 지구의 반지름 (km)\nconst dLat=(lat2-lat1)*Math.PI/180;const dLon=(lon2-lon1)*Math.PI/180;const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(lat1*Math.PI/180)*Math.cos(lat2*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;// km\n};// 필터링된 레스토랑 목록 생성\nconst getFilteredRestaurants=()=>{let filtered=restaurants;// 카테고리 필터\nif(filters.category!=='all'){filtered=filtered.filter(restaurant=>restaurant.cuisine===filters.category);}// 지역 필터\nif(filters.region!=='all'){filtered=filtered.filter(restaurant=>{return restaurant.address.includes(filters.region);});}// 거리 필터\nif(filters.maxDistance!=='all'&&userLocation){const maxDistance=parseFloat(filters.maxDistance);filtered=filtered.filter(restaurant=>{if(restaurant.latitude&&restaurant.longitude){const distance=calculateDistance(userLocation.lat,userLocation.lng,restaurant.latitude,restaurant.longitude);return distance<=maxDistance;}return false;// 좌표가 없는 레스토랑은 제외\n});}// 분위기 필터 (실제 데이터 기반)\nif(filters.mood!=='all'){if(filters.mood==='solo'){filtered=filtered.filter(restaurant=>restaurant.cuisine==='한식'||restaurant.cuisine==='분식');}else if(filters.mood==='date'){filtered=filtered.filter(restaurant=>restaurant.cuisine==='양식'||restaurant.cuisine==='카페'||restaurant.cuisine==='일식');}else if(filters.mood==='group'){filtered=filtered.filter(restaurant=>restaurant.cuisine==='중식'||restaurant.cuisine==='한식');}else if(filters.mood==='family'){filtered=filtered.filter(restaurant=>restaurant.cuisine==='한식'||restaurant.cuisine==='중식');}}return filtered;};// 랜덤 추천 생성\nconst generateRandomRecommendation=async()=>{setIsLoading(true);try{// 필터링된 레스토랑 목록 가져오기\nconst filteredRestaurants=getFilteredRestaurants();if(filteredRestaurants.length===0){alert('선택한 필터 조건에 맞는 레스토랑이 없습니다. 필터를 조정해주세요.');setIsLoading(false);return;}// 필터링된 목록에서 랜덤 선택\nconst randomIndex=Math.floor(Math.random()*filteredRestaurants.length);const randomRestaurant=filteredRestaurants[randomIndex];// 추가 데이터 매핑\nconst restaurantWithExtraData={...randomRestaurant,category:randomRestaurant.cuisine,price:\"2만원~5만원\",parking:\"주차 가능\",position:{lat:randomRestaurant.latitude,lng:randomRestaurant.longitude}};setCurrentRecommendation(restaurantWithExtraData);}catch(err){console.error('Failed to get random restaurant:',err);alert('랜덤 추천을 가져오는데 실패했습니다.');}finally{setIsLoading(false);}};// 필터 변경 핸들러\nconst handleFilterChange=(filterType,value)=>{setFilters(prev=>({...prev,[filterType]:value}));};// 좋아요 버튼 클릭 (토글 기능)\nconst handleLike=()=>{if(currentRecommendation){if(isInFavorites(currentRecommendation.id)){removeFromFavorites(currentRecommendation.id);}else{addToFavorites(currentRecommendation);}}};// 길찾기 버튼 클릭\nconst handleNavigate=()=>{if(currentRecommendation){const{lat,lng}=currentRecommendation.position;window.open(`https://map.kakao.com/link/to/${currentRecommendation.name},${lat},${lng}`,'_blank');}};// 별점 렌더링\nconst renderStars=rating=>{const stars=[];for(let i=1;i<=5;i++){stars.push(/*#__PURE__*/_jsx(\"span\",{className:`star ${i<=rating?'filled':''}`,children:\"\\u2605\"},i));}return stars;};// 카테고리 아이콘\nconst getCategoryIcon=category=>{const icons={'한식':'🍚','양식':'🍝','일식':'🍣','중식':'🥢','카페':'☕','디저트':'🍰','분식':'🍡','술':'🍺','태국':'🍜'};return icons[category]||'🍽️';};return/*#__PURE__*/_jsxs(\"div\",{className:\"random-recommendation-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFB2 \\uC624\\uB298 \\uBB50 \\uBA39\\uC9C0?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC6B4\\uBA85\\uC758 \\uB9DB\\uC9D1\\uC744 \\uCC3E\\uC544\\uBCF4\\uC138\\uC694!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-content\",children:[!currentRecommendation&&!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"start-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dice-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dice\",children:\"\\uD83C\\uDFB2\"}),/*#__PURE__*/_jsx(\"button\",{className:\"random-button\",onClick:generateRandomRecommendation,children:\"\\uB79C\\uB364 \\uCD94\\uCC9C!\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"filter-toggle-btn\",onClick:()=>setShowFilters(!showFilters),children:showFilters?'필터 숨기기':'필터 설정'}),!userLocation&&/*#__PURE__*/_jsx(\"button\",{className:\"location-btn\",onClick:getUserLocation,children:\"\\uD83D\\uDCCD \\uC704\\uCE58 \\uC124\\uC815\"})]}),showFilters&&/*#__PURE__*/_jsxs(\"div\",{className:\"filters-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD0D \\uD544\\uD130 \\uC124\\uC815\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC74C\\uC2DD \\uC885\\uB958:\"}),/*#__PURE__*/_jsx(\"select\",{value:filters.category,onChange:e=>handleFilterChange('category',e.target.value),children:filterOptions.categories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat,children:cat==='all'?'전체':cat},cat))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uC9C0\\uC5ED:\"}),/*#__PURE__*/_jsx(\"select\",{value:filters.region,onChange:e=>handleFilterChange('region',e.target.value),children:filterOptions.regions.map(region=>/*#__PURE__*/_jsx(\"option\",{value:region,children:region==='all'?'전체 지역':region},region))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uCD5C\\uB300 \\uAC70\\uB9AC:\"}),/*#__PURE__*/_jsxs(\"select\",{value:filters.maxDistance,onChange:e=>handleFilterChange('maxDistance',e.target.value),disabled:!userLocation,children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"\\uAC70\\uB9AC \\uBB34\\uAD00\"}),/*#__PURE__*/_jsx(\"option\",{value:\"1\",children:\"1km \\uC774\\uB0B4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"2\",children:\"2km \\uC774\\uB0B4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"3\",children:\"3km \\uC774\\uB0B4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"5\",children:\"5km \\uC774\\uB0B4\"}),/*#__PURE__*/_jsx(\"option\",{value:\"10\",children:\"10km \\uC774\\uB0B4\"})]}),!userLocation&&/*#__PURE__*/_jsx(\"small\",{className:\"location-warning\",children:\"\\uD83D\\uDCCD \\uC704\\uCE58 \\uC815\\uBCF4\\uAC00 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4. \\uBE0C\\uB77C\\uC6B0\\uC800\\uC5D0\\uC11C \\uC704\\uCE58 \\uC811\\uADFC\\uC744 \\uD5C8\\uC6A9\\uD574\\uC8FC\\uC138\\uC694.\"}),locationError&&/*#__PURE__*/_jsxs(\"small\",{className:\"location-error\",children:[\"\\u26A0\\uFE0F \",locationError]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\uBD84\\uC704\\uAE30:\"}),/*#__PURE__*/_jsx(\"select\",{value:filters.mood,onChange:e=>handleFilterChange('mood',e.target.value),children:filterOptions.moodOptions.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]})]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loading-animation\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-dice\",children:\"\\uD83C\\uDFB2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-text\",children:\"\\uC6B4\\uBA85\\uC758 \\uB9DB\\uC9D1\\uC744 \\uCC3E\\uB294 \\uC911...\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-countdown\",children:\"3... 2... 1...\"})]})}),currentRecommendation&&!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-result\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"result-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDF5C \\uC624\\uB298\\uC758 \\uCD94\\uCC9C!\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:currentRecommendation.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"category-badge\",children:[getCategoryIcon(currentRecommendation.category),\" \",currentRecommendation.category]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-rating\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stars\",children:renderStars(currentRecommendation.rating)}),/*#__PURE__*/_jsx(\"span\",{className:\"rating-text\",children:currentRecommendation.rating})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"restaurant-info\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"address\",children:[\"\\uD83D\\uDCCD \",currentRecommendation.address]}),userLocation&&currentRecommendation.latitude&&currentRecommendation.longitude&&/*#__PURE__*/_jsxs(\"p\",{className:\"distance\",children:[\"\\uD83D\\uDCCF \\uAC70\\uB9AC: \",calculateDistance(userLocation.lat,userLocation.lng,currentRecommendation.latitude,currentRecommendation.longitude).toFixed(1),\"km\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"price\",children:[\"\\uD83D\\uDCB0 \",currentRecommendation.price]}),/*#__PURE__*/_jsxs(\"p\",{className:\"hours\",children:[\"\\uD83D\\uDD52 \",currentRecommendation.hours]}),/*#__PURE__*/_jsxs(\"p\",{className:\"phone\",children:[\"\\uD83D\\uDCDE \",currentRecommendation.phone]}),/*#__PURE__*/_jsxs(\"p\",{className:\"parking\",children:[\"\\uD83D\\uDE97 \",currentRecommendation.parking]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"restaurant-description\",children:/*#__PURE__*/_jsx(\"p\",{children:currentRecommendation.description})}),/*#__PURE__*/_jsxs(\"div\",{className:\"action-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"action-btn dislike-btn\",onClick:generateRandomRecommendation,children:\"\\uD83D\\uDD04 \\uB2E4\\uB978\\uAC78\\uB85C!\"}),/*#__PURE__*/_jsx(\"button\",{className:`action-btn like-btn ${isInFavorites(currentRecommendation.id)?'favorited':''}`,onClick:handleLike,children:isInFavorites(currentRecommendation.id)?'❤️ 찜됨':'🤍 좋아요!'}),/*#__PURE__*/_jsx(\"button\",{className:\"action-btn navigate-btn\",onClick:handleNavigate,children:\"\\uD83D\\uDDFA\\uFE0F \\uAE38\\uCC3E\\uAE30\"})]})]})]})]})]});};export default RandomRecommendation;","map":{"version":3,"names":["React","useState","useEffect","useFavorites","useVisit","restaurantAPI","jsx","_jsx","jsxs","_jsxs","RandomRecommendation","currentRecommendation","setCurrentRecommendation","isLoading","setIsLoading","showFilters","setShowFilters","restaurants","setRestaurants","filterOptions","setFilterOptions","categories","regions","priceRanges","filters","setFilters","category","region","maxDistance","mood","userLocation","setUserLocation","locationError","setLocationError","addToFavorites","removeFromFavorites","isInFavorites","getRestaurantVisitStatus","getUserLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","error","console","fetchRestaurants","response","getAll","restaurantsWithExtraData","data","map","restaurant","cuisine","price","parking","generateFilterOptions","err","length","Set","r","regionMap","forEach","addressParts","address","split","push","distanceOptions","value","label","moodOptions","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","getFilteredRestaurants","filtered","filter","includes","parseFloat","distance","generateRandomRecommendation","filteredRestaurants","alert","randomIndex","floor","random","randomRestaurant","restaurantWithExtraData","handleFilterChange","filterType","prev","handleLike","id","handleNavigate","window","open","name","renderStars","rating","stars","i","className","children","getCategoryIcon","icons","onClick","onChange","e","target","cat","disabled","option","toFixed","hours","phone","description"],"sources":["/Users/ingtto/Documents/GitHub/ingchelin/src/pages/RandomRecommendation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFavorites } from '../context/FavoriteContext';\nimport { useVisit } from '../context/VisitContext';\nimport { restaurantAPI } from '../services/api';\nimport './RandomRecommendation.css';\n\nconst RandomRecommendation = () => {\n  const [currentRecommendation, setCurrentRecommendation] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [restaurants, setRestaurants] = useState([]);\n  const [filterOptions, setFilterOptions] = useState({\n    categories: ['all'],\n    regions: ['all'],\n    priceRanges: ['all']\n  });\n  const [filters, setFilters] = useState({\n    category: 'all',\n    region: 'all',\n    maxDistance: 'all',\n    mood: 'all'\n  });\n  const [userLocation, setUserLocation] = useState(null);\n  const [locationError, setLocationError] = useState(null);\n  const { addToFavorites, removeFromFavorites, isInFavorites } = useFavorites();\n  const { getRestaurantVisitStatus } = useVisit();\n\n  // 사용자 위치 가져오기\n  const getUserLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          });\n          setLocationError(null);\n        },\n        (error) => {\n          console.error('위치 정보를 가져올 수 없습니다:', error);\n          setLocationError('위치 정보를 가져올 수 없습니다. 거리 필터가 비활성화됩니다.');\n        }\n      );\n    } else {\n      setLocationError('이 브라우저는 위치 정보를 지원하지 않습니다.');\n    }\n  };\n\n  // 백엔드에서 레스토랑 데이터 가져오기\n  useEffect(() => {\n    const fetchRestaurants = async () => {\n      try {\n        const response = await restaurantAPI.getAll();\n        const restaurantsWithExtraData = response.data.map(restaurant => ({\n          ...restaurant,\n          category: restaurant.cuisine, // cuisine을 category로 매핑\n          price: \"2만원~5만원\", // 임시 데이터\n          parking: \"주차 가능\", // 임시 데이터\n          position: { lat: restaurant.latitude, lng: restaurant.longitude }\n        }));\n        setRestaurants(restaurantsWithExtraData);\n        \n        // 필터 옵션 동적 생성\n        generateFilterOptions(restaurantsWithExtraData);\n      } catch (err) {\n        console.error('Failed to fetch restaurants:', err);\n      }\n    };\n\n    fetchRestaurants();\n    getUserLocation(); // 사용자 위치 가져오기\n  }, []);\n\n  // 데이터베이스에서 필터 옵션 동적 생성\n  const generateFilterOptions = (restaurants) => {\n    if (!restaurants.length) return;\n\n    // 카테고리 옵션 생성\n    const categories = ['all', ...new Set(restaurants.map(r => r.cuisine))];\n    \n    // 지역 옵션 생성 (시/구 단위로 그룹화)\n    const regions = ['all'];\n    const regionMap = {};\n    \n    restaurants.forEach(restaurant => {\n      const addressParts = restaurant.address.split(' ');\n      if (addressParts.length >= 2) {\n        const region = `${addressParts[0]} ${addressParts[1]}`;\n        if (!regionMap[region]) {\n          regionMap[region] = 0;\n          regions.push(region);\n        }\n        regionMap[region]++;\n      }\n    });\n\n\n\n    // 거리 옵션\n    const distanceOptions = [\n      { value: 'all', label: '거리 무관' },\n      { value: '1', label: '1km 이내' },\n      { value: '2', label: '2km 이내' },\n      { value: '3', label: '3km 이내' },\n      { value: '5', label: '5km 이내' }\n    ];\n\n    // 분위기 옵션\n    const moodOptions = [\n      { value: 'all', label: '분위기 무관' },\n      { value: 'solo', label: '혼밥 가능' },\n      { value: 'date', label: '데이트 코스' },\n      { value: 'group', label: '단체 모임' },\n      { value: 'family', label: '가족 모임' }\n    ];\n\n    setFilterOptions({\n      categories,\n      regions,\n      distanceOptions,\n      moodOptions\n    });\n  };\n\n  // 거리 계산 함수\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // 지구의 반지름 (km)\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * \n      Math.sin(dLon/2) * Math.sin(dLon/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c; // km\n  };\n\n\n\n  // 필터링된 레스토랑 목록 생성\n  const getFilteredRestaurants = () => {\n    let filtered = restaurants;\n\n    // 카테고리 필터\n    if (filters.category !== 'all') {\n      filtered = filtered.filter(restaurant => restaurant.cuisine === filters.category);\n    }\n\n    // 지역 필터\n    if (filters.region !== 'all') {\n      filtered = filtered.filter(restaurant => {\n        return restaurant.address.includes(filters.region);\n      });\n    }\n\n    // 거리 필터\n    if (filters.maxDistance !== 'all' && userLocation) {\n      const maxDistance = parseFloat(filters.maxDistance);\n      filtered = filtered.filter(restaurant => {\n        if (restaurant.latitude && restaurant.longitude) {\n          const distance = calculateDistance(\n            userLocation.lat,\n            userLocation.lng,\n            restaurant.latitude,\n            restaurant.longitude\n          );\n          return distance <= maxDistance;\n        }\n        return false; // 좌표가 없는 레스토랑은 제외\n      });\n    }\n\n\n\n    // 분위기 필터 (실제 데이터 기반)\n    if (filters.mood !== 'all') {\n      if (filters.mood === 'solo') {\n        filtered = filtered.filter(restaurant => \n          restaurant.cuisine === '한식' || restaurant.cuisine === '분식'\n        );\n      } else if (filters.mood === 'date') {\n        filtered = filtered.filter(restaurant => \n          restaurant.cuisine === '양식' || restaurant.cuisine === '카페' || restaurant.cuisine === '일식'\n        );\n      } else if (filters.mood === 'group') {\n        filtered = filtered.filter(restaurant => \n          restaurant.cuisine === '중식' || restaurant.cuisine === '한식'\n        );\n      } else if (filters.mood === 'family') {\n        filtered = filtered.filter(restaurant => \n          restaurant.cuisine === '한식' || restaurant.cuisine === '중식'\n        );\n      }\n    }\n\n    return filtered;\n  };\n\n  // 랜덤 추천 생성\n  const generateRandomRecommendation = async () => {\n    setIsLoading(true);\n    \n    try {\n      // 필터링된 레스토랑 목록 가져오기\n      const filteredRestaurants = getFilteredRestaurants();\n      \n      if (filteredRestaurants.length === 0) {\n        alert('선택한 필터 조건에 맞는 레스토랑이 없습니다. 필터를 조정해주세요.');\n        setIsLoading(false);\n        return;\n      }\n      \n      // 필터링된 목록에서 랜덤 선택\n      const randomIndex = Math.floor(Math.random() * filteredRestaurants.length);\n      const randomRestaurant = filteredRestaurants[randomIndex];\n      \n      // 추가 데이터 매핑\n      const restaurantWithExtraData = {\n        ...randomRestaurant,\n        category: randomRestaurant.cuisine,\n        price: \"2만원~5만원\",\n        parking: \"주차 가능\",\n        position: { lat: randomRestaurant.latitude, lng: randomRestaurant.longitude }\n      };\n      \n      setCurrentRecommendation(restaurantWithExtraData);\n    } catch (err) {\n      console.error('Failed to get random restaurant:', err);\n      alert('랜덤 추천을 가져오는데 실패했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 필터 변경 핸들러\n  const handleFilterChange = (filterType, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: value\n    }));\n  };\n\n  // 좋아요 버튼 클릭 (토글 기능)\n  const handleLike = () => {\n    if (currentRecommendation) {\n      if (isInFavorites(currentRecommendation.id)) {\n        removeFromFavorites(currentRecommendation.id);\n      } else {\n        addToFavorites(currentRecommendation);\n      }\n    }\n  };\n\n  // 길찾기 버튼 클릭\n  const handleNavigate = () => {\n    if (currentRecommendation) {\n      const { lat, lng } = currentRecommendation.position;\n      window.open(`https://map.kakao.com/link/to/${currentRecommendation.name},${lat},${lng}`, '_blank');\n    }\n  };\n\n  // 별점 렌더링\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <span key={i} className={`star ${i <= rating ? 'filled' : ''}`}>\n          ★\n        </span>\n      );\n    }\n    return stars;\n  };\n\n  // 카테고리 아이콘\n  const getCategoryIcon = (category) => {\n    const icons = {\n      '한식': '🍚',\n      '양식': '🍝',\n      '일식': '🍣',\n      '중식': '🥢',\n      '카페': '☕',\n      '디저트': '🍰',\n      '분식': '🍡',\n      '술': '🍺',\n      '태국': '🍜'\n    };\n    return icons[category] || '🍽️';\n  };\n\n  return (\n    <div className=\"random-recommendation-container\">\n      <div className=\"recommendation-header\">\n        <h1>🎲 오늘 뭐 먹지?</h1>\n        <p>운명의 맛집을 찾아보세요!</p>\n      </div>\n\n      <div className=\"recommendation-content\">\n        {!currentRecommendation && !isLoading && (\n          <div className=\"start-section\">\n            <div className=\"dice-container\">\n              <div className=\"dice\">🎲</div>\n              <button \n                className=\"random-button\"\n                onClick={generateRandomRecommendation}\n              >\n                랜덤 추천!\n              </button>\n            </div>\n            \n            <button \n              className=\"filter-toggle-btn\"\n              onClick={() => setShowFilters(!showFilters)}\n            >\n              {showFilters ? '필터 숨기기' : '필터 설정'}\n            </button>\n            \n            {!userLocation && (\n              <button \n                className=\"location-btn\"\n                onClick={getUserLocation}\n              >\n                📍 위치 설정\n              </button>\n            )}\n          </div>\n        )}\n\n        {showFilters && (\n          <div className=\"filters-section\">\n            <h3>🔍 필터 설정</h3>\n            \n            <div className=\"filter-group\">\n              <label>음식 종류:</label>\n              <select \n                value={filters.category} \n                onChange={(e) => handleFilterChange('category', e.target.value)}\n              >\n                {filterOptions.categories.map(cat => (\n                  <option key={cat} value={cat}>\n                    {cat === 'all' ? '전체' : cat}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label>지역:</label>\n              <select \n                value={filters.region} \n                onChange={(e) => handleFilterChange('region', e.target.value)}\n              >\n                {filterOptions.regions.map(region => (\n                  <option key={region} value={region}>\n                    {region === 'all' ? '전체 지역' : region}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"filter-group\">\n              <label>최대 거리:</label>\n              <select \n                value={filters.maxDistance} \n                onChange={(e) => handleFilterChange('maxDistance', e.target.value)}\n                disabled={!userLocation}\n              >\n                <option value=\"all\">거리 무관</option>\n                <option value=\"1\">1km 이내</option>\n                <option value=\"2\">2km 이내</option>\n                <option value=\"3\">3km 이내</option>\n                <option value=\"5\">5km 이내</option>\n                <option value=\"10\">10km 이내</option>\n              </select>\n              {!userLocation && (\n                <small className=\"location-warning\">\n                  📍 위치 정보가 필요합니다. 브라우저에서 위치 접근을 허용해주세요.\n                </small>\n              )}\n              {locationError && (\n                <small className=\"location-error\">\n                  ⚠️ {locationError}\n                </small>\n              )}\n            </div>\n\n\n\n            <div className=\"filter-group\">\n              <label>분위기:</label>\n              <select \n                value={filters.mood} \n                onChange={(e) => handleFilterChange('mood', e.target.value)}\n              >\n                {filterOptions.moodOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        )}\n\n        {isLoading && (\n          <div className=\"loading-section\">\n            <div className=\"loading-animation\">\n              <div className=\"loading-dice\">🎲</div>\n              <div className=\"loading-text\">운명의 맛집을 찾는 중...</div>\n              <div className=\"loading-countdown\">3... 2... 1...</div>\n            </div>\n          </div>\n        )}\n\n        {currentRecommendation && !isLoading && (\n          <div className=\"recommendation-result\">\n            <div className=\"result-header\">\n              <h2>🍜 오늘의 추천!</h2>\n            </div>\n            \n            <div className=\"restaurant-card\">\n              <div className=\"restaurant-header\">\n                <h3>{currentRecommendation.name}</h3>\n                <span className=\"category-badge\">\n                  {getCategoryIcon(currentRecommendation.category)} {currentRecommendation.category}\n                </span>\n              </div>\n              \n              <div className=\"restaurant-rating\">\n                <div className=\"stars\">\n                  {renderStars(currentRecommendation.rating)}\n                </div>\n                <span className=\"rating-text\">{currentRecommendation.rating}</span>\n              </div>\n              \n              <div className=\"restaurant-info\">\n                <p className=\"address\">📍 {currentRecommendation.address}</p>\n                {userLocation && currentRecommendation.latitude && currentRecommendation.longitude && (\n                  <p className=\"distance\">\n                    📏 거리: {calculateDistance(\n                      userLocation.lat,\n                      userLocation.lng,\n                      currentRecommendation.latitude,\n                      currentRecommendation.longitude\n                    ).toFixed(1)}km\n                  </p>\n                )}\n                <p className=\"price\">💰 {currentRecommendation.price}</p>\n                <p className=\"hours\">🕒 {currentRecommendation.hours}</p>\n                <p className=\"phone\">📞 {currentRecommendation.phone}</p>\n                <p className=\"parking\">🚗 {currentRecommendation.parking}</p>\n              </div>\n              \n              <div className=\"restaurant-description\">\n                <p>{currentRecommendation.description}</p>\n              </div>\n              \n              <div className=\"action-buttons\">\n                <button \n                  className=\"action-btn dislike-btn\"\n                  onClick={generateRandomRecommendation}\n                >\n                  🔄 다른걸로!\n                </button>\n                <button \n                  className={`action-btn like-btn ${isInFavorites(currentRecommendation.id) ? 'favorited' : ''}`}\n                  onClick={handleLike}\n                >\n                  {isInFavorites(currentRecommendation.id) ? '❤️ 찜됨' : '🤍 좋아요!'}\n                </button>\n                <button \n                  className=\"action-btn navigate-btn\"\n                  onClick={handleNavigate}\n                >\n                  🗺️ 길찾기\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RandomRecommendation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}